0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Wed Mar 08 14:42:15 2023
0000              5   ;--------------------------------------------------------
                  5   $name Lab5
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _getTimeDifference
0000             30            public _getPeriod
0000             31            public _TIMER0_Init
0000             32            public _getsn
0000             33            public _LCDprint
0000             34            public _LCD_4BIT
0000             35            public _WriteCommand
0000             36            public _WriteData
0000             37            public _LCD_byte
0000             38            public _LCD_pulse
0000             39            public _Volts_at_Pin
0000             40            public _ADC_at_Pin
0000             41            public _InitPinADC
0000             42            public _waitms
0000             43            public _Timer3us
0000             44            public _InitADC
0000             45            public __c51_external_startup
0000             46            public _LCDprint_PARM_3
0000             47            public _getTimeDifference_PARM_2
0000             48            public _getsn_PARM_2
0000             49            public _LCDprint_PARM_2
0000             50            public _overflow_count
0000             51   ;--------------------------------------------------------
0000             52   ; Special Function Registers
0000             53   ;--------------------------------------------------------
0000             54   _ACC            DATA 0xe0
0000             55   _ADC0ASAH       DATA 0xb6
0000             56   _ADC0ASAL       DATA 0xb5
0000             57   _ADC0ASCF       DATA 0xa1
0000             58   _ADC0ASCT       DATA 0xc7
0000             59   _ADC0CF0        DATA 0xbc
0000             60   _ADC0CF1        DATA 0xb9
0000             61   _ADC0CF2        DATA 0xdf
0000             62   _ADC0CN0        DATA 0xe8
0000             63   _ADC0CN1        DATA 0xb2
0000             64   _ADC0CN2        DATA 0xb3
0000             65   _ADC0GTH        DATA 0xc4
0000             66   _ADC0GTL        DATA 0xc3
0000             67   _ADC0H          DATA 0xbe
0000             68   _ADC0L          DATA 0xbd
0000             69   _ADC0LTH        DATA 0xc6
0000             70   _ADC0LTL        DATA 0xc5
0000             71   _ADC0MX         DATA 0xbb
0000             72   _B              DATA 0xf0
0000             73   _CKCON0         DATA 0x8e
0000             74   _CKCON1         DATA 0xa6
0000             75   _CLEN0          DATA 0xc6
0000             76   _CLIE0          DATA 0xc7
0000             77   _CLIF0          DATA 0xe8
0000             78   _CLKSEL         DATA 0xa9
0000             79   _CLOUT0         DATA 0xd1
0000             80   _CLU0CF         DATA 0xb1
0000             81   _CLU0FN         DATA 0xaf
0000             82   _CLU0MX         DATA 0x84
0000             83   _CLU1CF         DATA 0xb3
0000             84   _CLU1FN         DATA 0xb2
0000             85   _CLU1MX         DATA 0x85
0000             86   _CLU2CF         DATA 0xb6
0000             87   _CLU2FN         DATA 0xb5
0000             88   _CLU2MX         DATA 0x91
0000             89   _CLU3CF         DATA 0xbf
0000             90   _CLU3FN         DATA 0xbe
0000             91   _CLU3MX         DATA 0xae
0000             92   _CMP0CN0        DATA 0x9b
0000             93   _CMP0CN1        DATA 0x99
0000             94   _CMP0MD         DATA 0x9d
0000             95   _CMP0MX         DATA 0x9f
0000             96   _CMP1CN0        DATA 0xbf
0000             97   _CMP1CN1        DATA 0xac
0000             98   _CMP1MD         DATA 0xab
0000             99   _CMP1MX         DATA 0xaa
0000            100   _CRC0CN0        DATA 0xce
0000            101   _CRC0CN1        DATA 0x86
0000            102   _CRC0CNT        DATA 0xd3
0000            103   _CRC0DAT        DATA 0xcb
0000            104   _CRC0FLIP       DATA 0xcf
0000            105   _CRC0IN         DATA 0xca
0000            106   _CRC0ST         DATA 0xd2
0000            107   _DAC0CF0        DATA 0x91
0000            108   _DAC0CF1        DATA 0x92
0000            109   _DAC0H          DATA 0x85
0000            110   _DAC0L          DATA 0x84
0000            111   _DAC1CF0        DATA 0x93
0000            112   _DAC1CF1        DATA 0x94
0000            113   _DAC1H          DATA 0x8a
0000            114   _DAC1L          DATA 0x89
0000            115   _DAC2CF0        DATA 0x95
0000            116   _DAC2CF1        DATA 0x96
0000            117   _DAC2H          DATA 0x8c
0000            118   _DAC2L          DATA 0x8b
0000            119   _DAC3CF0        DATA 0x9a
0000            120   _DAC3CF1        DATA 0x9c
0000            121   _DAC3H          DATA 0x8e
0000            122   _DAC3L          DATA 0x8d
0000            123   _DACGCF0        DATA 0x88
0000            124   _DACGCF1        DATA 0x98
0000            125   _DACGCF2        DATA 0xa2
0000            126   _DERIVID        DATA 0xad
0000            127   _DEVICEID       DATA 0xb5
0000            128   _DPH            DATA 0x83
0000            129   _DPL            DATA 0x82
0000            130   _EIE1           DATA 0xe6
0000            131   _EIE2           DATA 0xf3
0000            132   _EIP1           DATA 0xbb
0000            133   _EIP1H          DATA 0xee
0000            134   _EIP2           DATA 0xed
0000            135   _EIP2H          DATA 0xf6
0000            136   _EMI0CN         DATA 0xe7
0000            137   _FLKEY          DATA 0xb7
0000            138   _HFO0CAL        DATA 0xc7
0000            139   _HFO1CAL        DATA 0xd6
0000            140   _HFOCN          DATA 0xef
0000            141   _I2C0ADM        DATA 0xff
0000            142   _I2C0CN0        DATA 0xba
0000            143   _I2C0DIN        DATA 0xbc
0000            144   _I2C0DOUT       DATA 0xbb
0000            145   _I2C0FCN0       DATA 0xad
0000            146   _I2C0FCN1       DATA 0xab
0000            147   _I2C0FCT        DATA 0xf5
0000            148   _I2C0SLAD       DATA 0xbd
0000            149   _I2C0STAT       DATA 0xb9
0000            150   _IE             DATA 0xa8
0000            151   _IP             DATA 0xb8
0000            152   _IPH            DATA 0xf2
0000            153   _IT01CF         DATA 0xe4
0000            154   _LFO0CN         DATA 0xb1
0000            155   _P0             DATA 0x80
0000            156   _P0MASK         DATA 0xfe
0000            157   _P0MAT          DATA 0xfd
0000            158   _P0MDIN         DATA 0xf1
0000            159   _P0MDOUT        DATA 0xa4
0000            160   _P0SKIP         DATA 0xd4
0000            161   _P1             DATA 0x90
0000            162   _P1MASK         DATA 0xee
0000            163   _P1MAT          DATA 0xed
0000            164   _P1MDIN         DATA 0xf2
0000            165   _P1MDOUT        DATA 0xa5
0000            166   _P1SKIP         DATA 0xd5
0000            167   _P2             DATA 0xa0
0000            168   _P2MASK         DATA 0xfc
0000            169   _P2MAT          DATA 0xfb
0000            170   _P2MDIN         DATA 0xf3
0000            171   _P2MDOUT        DATA 0xa6
0000            172   _P2SKIP         DATA 0xcc
0000            173   _P3             DATA 0xb0
0000            174   _P3MDIN         DATA 0xf4
0000            175   _P3MDOUT        DATA 0x9c
0000            176   _PCA0CENT       DATA 0x9e
0000            177   _PCA0CLR        DATA 0x9c
0000            178   _PCA0CN0        DATA 0xd8
0000            179   _PCA0CPH0       DATA 0xfc
0000            180   _PCA0CPH1       DATA 0xea
0000            181   _PCA0CPH2       DATA 0xec
0000            182   _PCA0CPH3       DATA 0xf5
0000            183   _PCA0CPH4       DATA 0x85
0000            184   _PCA0CPH5       DATA 0xde
0000            185   _PCA0CPL0       DATA 0xfb
0000            186   _PCA0CPL1       DATA 0xe9
0000            187   _PCA0CPL2       DATA 0xeb
0000            188   _PCA0CPL3       DATA 0xf4
0000            189   _PCA0CPL4       DATA 0x84
0000            190   _PCA0CPL5       DATA 0xdd
0000            191   _PCA0CPM0       DATA 0xda
0000            192   _PCA0CPM1       DATA 0xdb
0000            193   _PCA0CPM2       DATA 0xdc
0000            194   _PCA0CPM3       DATA 0xae
0000            195   _PCA0CPM4       DATA 0xaf
0000            196   _PCA0CPM5       DATA 0xcc
0000            197   _PCA0H          DATA 0xfa
0000            198   _PCA0L          DATA 0xf9
0000            199   _PCA0MD         DATA 0xd9
0000            200   _PCA0POL        DATA 0x96
0000            201   _PCA0PWM        DATA 0xf7
0000            202   _PCON0          DATA 0x87
0000            203   _PCON1          DATA 0xcd
0000            204   _PFE0CN         DATA 0xc1
0000            205   _PRTDRV         DATA 0xf6
0000            206   _PSCTL          DATA 0x8f
0000            207   _PSTAT0         DATA 0xaa
0000            208   _PSW            DATA 0xd0
0000            209   _REF0CN         DATA 0xd1
0000            210   _REG0CN         DATA 0xc9
0000            211   _REVID          DATA 0xb6
0000            212   _RSTSRC         DATA 0xef
0000            213   _SBCON1         DATA 0x94
0000            214   _SBRLH1         DATA 0x96
0000            215   _SBRLL1         DATA 0x95
0000            216   _SBUF           DATA 0x99
0000            217   _SBUF0          DATA 0x99
0000            218   _SBUF1          DATA 0x92
0000            219   _SCON           DATA 0x98
0000            220   _SCON0          DATA 0x98
0000            221   _SCON1          DATA 0xc8
0000            222   _SFRPAGE        DATA 0xa7
0000            223   _SFRPGCN        DATA 0xbc
0000            224   _SFRSTACK       DATA 0xd7
0000            225   _SMB0ADM        DATA 0xd6
0000            226   _SMB0ADR        DATA 0xd7
0000            227   _SMB0CF         DATA 0xc1
0000            228   _SMB0CN0        DATA 0xc0
0000            229   _SMB0DAT        DATA 0xc2
0000            230   _SMB0FCN0       DATA 0xc3
0000            231   _SMB0FCN1       DATA 0xc4
0000            232   _SMB0FCT        DATA 0xef
0000            233   _SMB0RXLN       DATA 0xc5
0000            234   _SMB0TC         DATA 0xac
0000            235   _SMOD1          DATA 0x93
0000            236   _SP             DATA 0x81
0000            237   _SPI0CFG        DATA 0xa1
0000            238   _SPI0CKR        DATA 0xa2
0000            239   _SPI0CN0        DATA 0xf8
0000            240   _SPI0DAT        DATA 0xa3
0000            241   _SPI0FCN0       DATA 0x9a
0000            242   _SPI0FCN1       DATA 0x9b
0000            243   _SPI0FCT        DATA 0xf7
0000            244   _SPI0PCF        DATA 0xdf
0000            245   _TCON           DATA 0x88
0000            246   _TH0            DATA 0x8c
0000            247   _TH1            DATA 0x8d
0000            248   _TL0            DATA 0x8a
0000            249   _TL1            DATA 0x8b
0000            250   _TMOD           DATA 0x89
0000            251   _TMR2CN0        DATA 0xc8
0000            252   _TMR2CN1        DATA 0xfd
0000            253   _TMR2H          DATA 0xcf
0000            254   _TMR2L          DATA 0xce
0000            255   _TMR2RLH        DATA 0xcb
0000            256   _TMR2RLL        DATA 0xca
0000            257   _TMR3CN0        DATA 0x91
0000            258   _TMR3CN1        DATA 0xfe
0000            259   _TMR3H          DATA 0x95
0000            260   _TMR3L          DATA 0x94
0000            261   _TMR3RLH        DATA 0x93
0000            262   _TMR3RLL        DATA 0x92
0000            263   _TMR4CN0        DATA 0x98
0000            264   _TMR4CN1        DATA 0xff
0000            265   _TMR4H          DATA 0xa5
0000            266   _TMR4L          DATA 0xa4
0000            267   _TMR4RLH        DATA 0xa3
0000            268   _TMR4RLL        DATA 0xa2
0000            269   _TMR5CN0        DATA 0xc0
0000            270   _TMR5CN1        DATA 0xf1
0000            271   _TMR5H          DATA 0xd5
0000            272   _TMR5L          DATA 0xd4
0000            273   _TMR5RLH        DATA 0xd3
0000            274   _TMR5RLL        DATA 0xd2
0000            275   _UART0PCF       DATA 0xd9
0000            276   _UART1FCN0      DATA 0x9d
0000            277   _UART1FCN1      DATA 0xd8
0000            278   _UART1FCT       DATA 0xfa
0000            279   _UART1LIN       DATA 0x9e
0000            280   _UART1PCF       DATA 0xda
0000            281   _VDM0CN         DATA 0xff
0000            282   _WDTCN          DATA 0x97
0000            283   _XBR0           DATA 0xe1
0000            284   _XBR1           DATA 0xe2
0000            285   _XBR2           DATA 0xe3
0000            286   _XOSC0CN        DATA 0x86
0000            287   _DPTR           DATA 0x8382
0000            288   _TMR2RL         DATA 0xcbca
0000            289   _TMR3RL         DATA 0x9392
0000            290   _TMR4RL         DATA 0xa3a2
0000            291   _TMR5RL         DATA 0xd3d2
0000            292   _TMR0           DATA 0x8c8a
0000            293   _TMR1           DATA 0x8d8b
0000            294   _TMR2           DATA 0xcfce
0000            295   _TMR3           DATA 0x9594
0000            296   _TMR4           DATA 0xa5a4
0000            297   _TMR5           DATA 0xd5d4
0000            298   _SBRL1          DATA 0x9695
0000            299   _PCA0           DATA 0xfaf9
0000            300   _PCA0CP0        DATA 0xfcfb
0000            301   _PCA0CP1        DATA 0xeae9
0000            302   _PCA0CP2        DATA 0xeceb
0000            303   _PCA0CP3        DATA 0xf5f4
0000            304   _PCA0CP4        DATA 0x8584
0000            305   _PCA0CP5        DATA 0xdedd
0000            306   _ADC0ASA        DATA 0xb6b5
0000            307   _ADC0GT         DATA 0xc4c3
0000            308   _ADC0           DATA 0xbebd
0000            309   _ADC0LT         DATA 0xc6c5
0000            310   _DAC0           DATA 0x8584
0000            311   _DAC1           DATA 0x8a89
0000            312   _DAC2           DATA 0x8c8b
0000            313   _DAC3           DATA 0x8e8d
0000            314   ;--------------------------------------------------------
0000            315   ; special function bits
0000            316   ;--------------------------------------------------------
0000            317   _ACC_0          BIT 0xe0
0000            318   _ACC_1          BIT 0xe1
0000            319   _ACC_2          BIT 0xe2
0000            320   _ACC_3          BIT 0xe3
0000            321   _ACC_4          BIT 0xe4
0000            322   _ACC_5          BIT 0xe5
0000            323   _ACC_6          BIT 0xe6
0000            324   _ACC_7          BIT 0xe7
0000            325   _TEMPE          BIT 0xe8
0000            326   _ADGN0          BIT 0xe9
0000            327   _ADGN1          BIT 0xea
0000            328   _ADWINT         BIT 0xeb
0000            329   _ADBUSY         BIT 0xec
0000            330   _ADINT          BIT 0xed
0000            331   _IPOEN          BIT 0xee
0000            332   _ADEN           BIT 0xef
0000            333   _B_0            BIT 0xf0
0000            334   _B_1            BIT 0xf1
0000            335   _B_2            BIT 0xf2
0000            336   _B_3            BIT 0xf3
0000            337   _B_4            BIT 0xf4
0000            338   _B_5            BIT 0xf5
0000            339   _B_6            BIT 0xf6
0000            340   _B_7            BIT 0xf7
0000            341   _C0FIF          BIT 0xe8
0000            342   _C0RIF          BIT 0xe9
0000            343   _C1FIF          BIT 0xea
0000            344   _C1RIF          BIT 0xeb
0000            345   _C2FIF          BIT 0xec
0000            346   _C2RIF          BIT 0xed
0000            347   _C3FIF          BIT 0xee
0000            348   _C3RIF          BIT 0xef
0000            349   _D1SRC0         BIT 0x88
0000            350   _D1SRC1         BIT 0x89
0000            351   _D1AMEN         BIT 0x8a
0000            352   _D01REFSL       BIT 0x8b
0000            353   _D3SRC0         BIT 0x8c
0000            354   _D3SRC1         BIT 0x8d
0000            355   _D3AMEN         BIT 0x8e
0000            356   _D23REFSL       BIT 0x8f
0000            357   _D0UDIS         BIT 0x98
0000            358   _D1UDIS         BIT 0x99
0000            359   _D2UDIS         BIT 0x9a
0000            360   _D3UDIS         BIT 0x9b
0000            361   _EX0            BIT 0xa8
0000            362   _ET0            BIT 0xa9
0000            363   _EX1            BIT 0xaa
0000            364   _ET1            BIT 0xab
0000            365   _ES0            BIT 0xac
0000            366   _ET2            BIT 0xad
0000            367   _ESPI0          BIT 0xae
0000            368   _EA             BIT 0xaf
0000            369   _PX0            BIT 0xb8
0000            370   _PT0            BIT 0xb9
0000            371   _PX1            BIT 0xba
0000            372   _PT1            BIT 0xbb
0000            373   _PS0            BIT 0xbc
0000            374   _PT2            BIT 0xbd
0000            375   _PSPI0          BIT 0xbe
0000            376   _P0_0           BIT 0x80
0000            377   _P0_1           BIT 0x81
0000            378   _P0_2           BIT 0x82
0000            379   _P0_3           BIT 0x83
0000            380   _P0_4           BIT 0x84
0000            381   _P0_5           BIT 0x85
0000            382   _P0_6           BIT 0x86
0000            383   _P0_7           BIT 0x87
0000            384   _P1_0           BIT 0x90
0000            385   _P1_1           BIT 0x91
0000            386   _P1_2           BIT 0x92
0000            387   _P1_3           BIT 0x93
0000            388   _P1_4           BIT 0x94
0000            389   _P1_5           BIT 0x95
0000            390   _P1_6           BIT 0x96
0000            391   _P1_7           BIT 0x97
0000            392   _P2_0           BIT 0xa0
0000            393   _P2_1           BIT 0xa1
0000            394   _P2_2           BIT 0xa2
0000            395   _P2_3           BIT 0xa3
0000            396   _P2_4           BIT 0xa4
0000            397   _P2_5           BIT 0xa5
0000            398   _P2_6           BIT 0xa6
0000            399   _P3_0           BIT 0xb0
0000            400   _P3_1           BIT 0xb1
0000            401   _P3_2           BIT 0xb2
0000            402   _P3_3           BIT 0xb3
0000            403   _P3_4           BIT 0xb4
0000            404   _P3_7           BIT 0xb7
0000            405   _CCF0           BIT 0xd8
0000            406   _CCF1           BIT 0xd9
0000            407   _CCF2           BIT 0xda
0000            408   _CCF3           BIT 0xdb
0000            409   _CCF4           BIT 0xdc
0000            410   _CCF5           BIT 0xdd
0000            411   _CR             BIT 0xde
0000            412   _CF             BIT 0xdf
0000            413   _PARITY         BIT 0xd0
0000            414   _F1             BIT 0xd1
0000            415   _OV             BIT 0xd2
0000            416   _RS0            BIT 0xd3
0000            417   _RS1            BIT 0xd4
0000            418   _F0             BIT 0xd5
0000            419   _AC             BIT 0xd6
0000            420   _CY             BIT 0xd7
0000            421   _RI             BIT 0x98
0000            422   _TI             BIT 0x99
0000            423   _RB8            BIT 0x9a
0000            424   _TB8            BIT 0x9b
0000            425   _REN            BIT 0x9c
0000            426   _CE             BIT 0x9d
0000            427   _SMODE          BIT 0x9e
0000            428   _RI1            BIT 0xc8
0000            429   _TI1            BIT 0xc9
0000            430   _RBX1           BIT 0xca
0000            431   _TBX1           BIT 0xcb
0000            432   _REN1           BIT 0xcc
0000            433   _PERR1          BIT 0xcd
0000            434   _OVR1           BIT 0xce
0000            435   _SI             BIT 0xc0
0000            436   _ACK            BIT 0xc1
0000            437   _ARBLOST        BIT 0xc2
0000            438   _ACKRQ          BIT 0xc3
0000            439   _STO            BIT 0xc4
0000            440   _STA            BIT 0xc5
0000            441   _TXMODE         BIT 0xc6
0000            442   _MASTER         BIT 0xc7
0000            443   _SPIEN          BIT 0xf8
0000            444   _TXNF           BIT 0xf9
0000            445   _NSSMD0         BIT 0xfa
0000            446   _NSSMD1         BIT 0xfb
0000            447   _RXOVRN         BIT 0xfc
0000            448   _MODF           BIT 0xfd
0000            449   _WCOL           BIT 0xfe
0000            450   _SPIF           BIT 0xff
0000            451   _IT0            BIT 0x88
0000            452   _IE0            BIT 0x89
0000            453   _IT1            BIT 0x8a
0000            454   _IE1            BIT 0x8b
0000            455   _TR0            BIT 0x8c
0000            456   _TF0            BIT 0x8d
0000            457   _TR1            BIT 0x8e
0000            458   _TF1            BIT 0x8f
0000            459   _T2XCLK0        BIT 0xc8
0000            460   _T2XCLK1        BIT 0xc9
0000            461   _TR2            BIT 0xca
0000            462   _T2SPLIT        BIT 0xcb
0000            463   _TF2CEN         BIT 0xcc
0000            464   _TF2LEN         BIT 0xcd
0000            465   _TF2L           BIT 0xce
0000            466   _TF2H           BIT 0xcf
0000            467   _T4XCLK0        BIT 0x98
0000            468   _T4XCLK1        BIT 0x99
0000            469   _TR4            BIT 0x9a
0000            470   _T4SPLIT        BIT 0x9b
0000            471   _TF4CEN         BIT 0x9c
0000            472   _TF4LEN         BIT 0x9d
0000            473   _TF4L           BIT 0x9e
0000            474   _TF4H           BIT 0x9f
0000            475   _T5XCLK0        BIT 0xc0
0000            476   _T5XCLK1        BIT 0xc1
0000            477   _TR5            BIT 0xc2
0000            478   _T5SPLIT        BIT 0xc3
0000            479   _TF5CEN         BIT 0xc4
0000            480   _TF5LEN         BIT 0xc5
0000            481   _TF5L           BIT 0xc6
0000            482   _TF5H           BIT 0xc7
0000            483   _RIE            BIT 0xd8
0000            484   _RXTO0          BIT 0xd9
0000            485   _RXTO1          BIT 0xda
0000            486   _RFRQ           BIT 0xdb
0000            487   _TIE            BIT 0xdc
0000            488   _TXHOLD         BIT 0xdd
0000            489   _TXNF1          BIT 0xde
0000            490   _TFRQ           BIT 0xdf
0000            491   ;--------------------------------------------------------
0000            492   ; overlayable register banks
0000            493   ;--------------------------------------------------------
0000            494            rbank0 segment data overlay
0000            495   ;--------------------------------------------------------
0000            496   ; internal ram data
0000            497   ;--------------------------------------------------------
0000            498            rseg R_DSEG
0000            499   _overflow_count:
0000            500            ds 1
0001            501   _LCDprint_PARM_2:
0001            502            ds 1
0002            503   _getsn_PARM_2:
0002            504            ds 2
0004            505   _getsn_buff_1_70:
0004            506            ds 3
0007            507   _getsn_sloc0_1_0:
0007            508            ds 2
0009            509   _getTimeDifference_PARM_2:
0009            510            ds 1
000A            511   _main_period_1_88:
000A            512            ds 4
000E            513   _main_phaseDifference_1_88:
000E            514            ds 2
0010            515   _main_output_buffer_1_88:
0010            516            ds 20
0024            517   ;--------------------------------------------------------
0024            518   ; overlayable items in internal ram 
0024            519   ;--------------------------------------------------------
0000            520            rseg    R_OSEG
0000            521            rseg    R_OSEG
0000            522   _InitPinADC_PARM_2:
0000            523            ds 1
0001            524            rseg    R_OSEG
0001            525   ;--------------------------------------------------------
0001            526   ; indirectly addressable internal ram data
0001            527   ;--------------------------------------------------------
0000            528            rseg R_ISEG
0000            529   ;--------------------------------------------------------
0000            530   ; absolute internal ram data
0000            531   ;--------------------------------------------------------
0000            532            DSEG
0000            533   ;--------------------------------------------------------
0000            534   ; bit data
0000            535   ;--------------------------------------------------------
0000            536            rseg R_BSEG
0000            537   _LCDprint_PARM_3:
0000            538            DBIT    1
0001            539   ;--------------------------------------------------------
0001            540   ; paged external ram data
0001            541   ;--------------------------------------------------------
0000            542            rseg R_PSEG
0000            543   ;--------------------------------------------------------
0000            544   ; external ram data
0000            545   ;--------------------------------------------------------
0000            546            rseg R_XSEG
0000            547   ;--------------------------------------------------------
0000            548   ; absolute external ram data
0000            549   ;--------------------------------------------------------
0000            550            XSEG
0000            551   ;--------------------------------------------------------
0000            552   ; external initialized ram data
0000            553   ;--------------------------------------------------------
0000            554            rseg R_IXSEG
0000            555            rseg R_HOME
0000            556            rseg R_GSINIT
0000            557            rseg R_CSEG
0000            558   ;--------------------------------------------------------
0000            559   ; Reset entry point and interrupt vectors
0000            560   ;--------------------------------------------------------
0000            561            CSEG at 0x0000
0000 020000     562            ljmp    _crt0
0003            563   ;--------------------------------------------------------
0003            564   ; global & static initialisations
0003            565   ;--------------------------------------------------------
0000            566            rseg R_HOME
0000            567            rseg R_GSINIT
0000            568            rseg R_GSINIT
0000            569   ;--------------------------------------------------------
0000            570   ; data variables initialization
0000            571   ;--------------------------------------------------------
0000            572            rseg R_DINIT
0000            573            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            574   ;--------------------------------------------------------
0000            575   ; code
0000            576   ;--------------------------------------------------------
0000            577            rseg R_CSEG
0000            578   ;------------------------------------------------------------
0000            579   ;Allocation info for local variables in function '_c51_external_startup'
0000            580   ;------------------------------------------------------------
0000            581   ;------------------------------------------------------------
0000            582   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:30: char _c51_external_startup (void)
0000            583   ;        -----------------------------------------
0000            584   ;         function _c51_external_startup
0000            585   ;        -----------------------------------------
0000            586   __c51_external_startup:
0000            587            using   0
0000            588   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:33: SFRPAGE = 0x00;
0000 75A700     589            mov     _SFRPAGE,#0x00
0003            590   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:34: WDTCN = 0xDE; //First key
0003 7597DE     591            mov     _WDTCN,#0xDE
0006            592   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:35: WDTCN = 0xAD; //Second key
0006 7597AD     593            mov     _WDTCN,#0xAD
0009            594   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:37: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     595            mov     _VDM0CN,#0x80
000C            596   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:38: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     597            mov     _RSTSRC,#0x06
000F            598   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:45: SFRPAGE = 0x10;
000F 75A710     599            mov     _SFRPAGE,#0x10
0012            600   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:46: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     601            mov     _PFE0CN,#0x20
0015            602   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:47: SFRPAGE = 0x00;
0015 75A700     603            mov     _SFRPAGE,#0x00
0018            604   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:68: CLKSEL = 0x00;
0018 75A900     605            mov     _CLKSEL,#0x00
001B            606   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:69: CLKSEL = 0x00;
001B 75A900     607            mov     _CLKSEL,#0x00
001E            608   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:70: while ((CLKSEL & 0x80) == 0);
001E            609   L002001?:
001E E5A9       610            mov     a,_CLKSEL
0020 30E7A0     611            jnb     acc.7,L002001?
0023            612   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:71: CLKSEL = 0x03;
0023 75A903     613            mov     _CLKSEL,#0x03
0026            614   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:72: CLKSEL = 0x03;
0026 75A903     615            mov     _CLKSEL,#0x03
0029            616   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:73: while ((CLKSEL & 0x80) == 0);
0029            617   L002004?:
0029 E5A9       618            mov     a,_CLKSEL
002B 30E720     619            jnb     acc.7,L002004?
002E            620   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:78: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     621            orl     _P0MDOUT,#0x10
0031            622   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:79: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     623            mov     _XBR0,#0x01
0034            624   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:80: XBR1     = 0X00;
0034 75E200     625            mov     _XBR1,#0x00
0037            626   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:81: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     627            mov     _XBR2,#0x40
003A            628   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:87: SCON0 = 0x10;
003A 759810     629            mov     _SCON0,#0x10
003D            630   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:88: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
003D 758DE6     631            mov     _TH1,#0xE6
0040            632   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:89: TL1 = TH1;      // Init Timer1
0040 858D8B     633            mov     _TL1,_TH1
0043            634   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:90: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     635            anl     _TMOD,#0x0F
0046            636   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:91: TMOD |=  0x20;                       
0046 438920     637            orl     _TMOD,#0x20
0049            638   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:92: TR1 = 1; // START Timer1
0049 D28E       639            setb    _TR1
004B            640   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:93: TI = 1;  // Indicate TX0 ready
004B D299       641            setb    _TI
004D            642   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:95: return 0;
004D 758200     643            mov     dpl,#0x00
0050 22         644            ret
0051            645   ;------------------------------------------------------------
0051            646   ;Allocation info for local variables in function 'InitADC'
0051            647   ;------------------------------------------------------------
0051            648   ;------------------------------------------------------------
0051            649   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:98: void InitADC (void)
0051            650   ;        -----------------------------------------
0051            651   ;         function InitADC
0051            652   ;        -----------------------------------------
0051            653   _InitADC:
0051            654   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:100: SFRPAGE = 0x00;
0051 75A700     655            mov     _SFRPAGE,#0x00
0054            656   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:101: ADEN=0; // Disable ADC
0054 C2EF       657            clr     _ADEN
0056            658   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:106: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0056 75B280     659            mov     _ADC0CN1,#0x80
0059            660   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:110: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
0059 75BC20     661            mov     _ADC0CF0,#0x20
005C            662   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:114: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005C 75B91E     663            mov     _ADC0CF1,#0x1E
005F            664   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:123: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
005F 75E800     665            mov     _ADC0CN0,#0x00
0062            666   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:128: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0062 75DF3F     667            mov     _ADC0CF2,#0x3F
0065            668   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:132: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0065 75B300     669            mov     _ADC0CN2,#0x00
0068            670   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:134: ADEN=1; // Enable ADC
0068 D2EF       671            setb    _ADEN
006A 22         672            ret
006B            673   ;------------------------------------------------------------
006B            674   ;Allocation info for local variables in function 'Timer3us'
006B            675   ;------------------------------------------------------------
006B            676   ;us                        Allocated to registers r2 
006B            677   ;i                         Allocated to registers r3 
006B            678   ;------------------------------------------------------------
006B            679   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:137: void Timer3us(unsigned char us)
006B            680   ;        -----------------------------------------
006B            681   ;         function Timer3us
006B            682   ;        -----------------------------------------
006B            683   _Timer3us:
006B AA82       684            mov     r2,dpl
006D            685   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:142: CKCON0|=0b_0100_0000;
006D 438E40     686            orl     _CKCON0,#0x40
0070            687   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:144: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0070 7592B8     688            mov     _TMR3RL,#0xB8
0073 7593FF     689            mov     (_TMR3RL >> 8),#0xFF
0076            690   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:145: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0076 859294     691            mov     _TMR3,_TMR3RL
0079 859395     692            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007C            693   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:147: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007C 759104     694            mov     _TMR3CN0,#0x04
007F            695   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:148: for (i = 0; i < us; i++)       // Count <us> overflows
007F 7B00       696            mov     r3,#0x00
0081            697   L004004?:
0081 C3         698            clr     c
0082 EB         699            mov     a,r3
0083 9A         700            subb    a,r2
0084 5000       701            jnc     L004007?
0086            702   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:150: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0086            703   L004001?:
0086 E591       704            mov     a,_TMR3CN0
0088 30E720     705            jnb     acc.7,L004001?
008B            706   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:151: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008B 53917F     707            anl     _TMR3CN0,#0x7F
008E            708   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:148: for (i = 0; i < us; i++)       // Count <us> overflows
008E 0B         709            inc     r3
008F 8000       710            sjmp    L004004?
0091            711   L004007?:
0091            712   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:153: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0091 759100     713            mov     _TMR3CN0,#0x00
0094 22         714            ret
0095            715   ;------------------------------------------------------------
0095            716   ;Allocation info for local variables in function 'waitms'
0095            717   ;------------------------------------------------------------
0095            718   ;ms                        Allocated to registers r2 r3 
0095            719   ;j                         Allocated to registers r4 r5 
0095            720   ;k                         Allocated to registers r6 
0095            721   ;------------------------------------------------------------
0095            722   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:156: void waitms (unsigned int ms)
0095            723   ;        -----------------------------------------
0095            724   ;         function waitms
0095            725   ;        -----------------------------------------
0095            726   _waitms:
0095 AA82       727            mov     r2,dpl
0097 AB83       728            mov     r3,dph
0099            729   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:160: for(j=0; j<ms; j++)
0099 7C00       730            mov     r4,#0x00
009B 7D00       731            mov     r5,#0x00
009D            732   L005005?:
009D C3         733            clr     c
009E EC         734            mov     a,r4
009F 9A         735            subb    a,r2
00A0 ED         736            mov     a,r5
00A1 9B         737            subb    a,r3
00A2 5000       738            jnc     L005009?
00A4            739   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:161: for (k=0; k<4; k++) Timer3us(250);
00A4 7E00       740            mov     r6,#0x00
00A6            741   L005001?:
00A6 BE0460     742            cjne    r6,#0x04,L005018?
00A9            743   L005018?:
00A9 5000       744            jnc     L005007?
00AB 7582FA     745            mov     dpl,#0xFA
00AE C002       746            push    ar2
00B0 C003       747            push    ar3
00B2 C004       748            push    ar4
00B4 C005       749            push    ar5
00B6 C006       750            push    ar6
00B8 120000     751            lcall   _Timer3us
00BB D006       752            pop     ar6
00BD D005       753            pop     ar5
00BF D004       754            pop     ar4
00C1 D003       755            pop     ar3
00C3 D002       756            pop     ar2
00C5 0E         757            inc     r6
00C6 8000       758            sjmp    L005001?
00C8            759   L005007?:
00C8            760   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:160: for(j=0; j<ms; j++)
00C8 0C         761            inc     r4
00C9 BC00A0     762            cjne    r4,#0x00,L005005?
00CC 0D         763            inc     r5
00CD 8000       764            sjmp    L005005?
00CF            765   L005009?:
00CF 22         766            ret
00D0            767   ;------------------------------------------------------------
00D0            768   ;Allocation info for local variables in function 'InitPinADC'
00D0            769   ;------------------------------------------------------------
00D0            770   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
00D0            771   ;portno                    Allocated to registers r2 
00D0            772   ;mask                      Allocated to registers r3 
00D0            773   ;------------------------------------------------------------
00D0            774   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:164: void InitPinADC (unsigned char portno, unsigned char pinno)
00D0            775   ;        -----------------------------------------
00D0            776   ;         function InitPinADC
00D0            777   ;        -----------------------------------------
00D0            778   _InitPinADC:
00D0 AA82       779            mov     r2,dpl
00D2            780   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:168: mask=1<<pinno;
00D2 85C0F0     781            mov     b,_InitPinADC_PARM_2
00D5 05F0       782            inc     b
00D7 7401       783            mov     a,#0x01
00D9 8000       784            sjmp    L006013?
00DB            785   L006011?:
00DB 25E0       786            add     a,acc
00DD            787   L006013?:
00DD D5F060     788            djnz    b,L006011?
00E0 FB         789            mov     r3,a
00E1            790   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:170: SFRPAGE = 0x20;
00E1 75A720     791            mov     _SFRPAGE,#0x20
00E4            792   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:171: switch (portno)
00E4 BA00A0     793            cjne    r2,#0x00,L006014?
00E7 8000       794            sjmp    L006001?
00E9            795   L006014?:
00E9 BA0120     796            cjne    r2,#0x01,L006015?
00EC 8000       797            sjmp    L006002?
00EE            798   L006015?:
00EE            799   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:173: case 0:
00EE BA02A0     800            cjne    r2,#0x02,L006005?
00F1 8000       801            sjmp    L006003?
00F3            802   L006001?:
00F3            803   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:174: P0MDIN &= (~mask); // Set pin as analog input
00F3 EB         804            mov     a,r3
00F4 F4         805            cpl     a
00F5 FA         806            mov     r2,a
00F6 52F1       807            anl     _P0MDIN,a
00F8            808   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:175: P0SKIP |= mask; // Skip Crossbar decoding for this pin
00F8 EB         809            mov     a,r3
00F9 42D4       810            orl     _P0SKIP,a
00FB            811   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:176: break;
00FB            812   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:177: case 1:
00FB 8000       813            sjmp    L006005?
00FD            814   L006002?:
00FD            815   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:178: P1MDIN &= (~mask); // Set pin as analog input
00FD EB         816            mov     a,r3
00FE F4         817            cpl     a
00FF FA         818            mov     r2,a
0100 52F2       819            anl     _P1MDIN,a
0102            820   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:179: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0102 EB         821            mov     a,r3
0103 42D5       822            orl     _P1SKIP,a
0105            823   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:180: break;
0105            824   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:181: case 2:
0105 8000       825            sjmp    L006005?
0107            826   L006003?:
0107            827   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:182: P2MDIN &= (~mask); // Set pin as analog input
0107 EB         828            mov     a,r3
0108 F4         829            cpl     a
0109 FA         830            mov     r2,a
010A 52F3       831            anl     _P2MDIN,a
010C            832   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:183: P2SKIP |= mask; // Skip Crossbar decoding for this pin
010C EB         833            mov     a,r3
010D 42CC       834            orl     _P2SKIP,a
010F            835   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:187: }
010F            836   L006005?:
010F            837   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:188: SFRPAGE = 0x00;
010F 75A700     838            mov     _SFRPAGE,#0x00
0112 22         839            ret
0113            840   ;------------------------------------------------------------
0113            841   ;Allocation info for local variables in function 'ADC_at_Pin'
0113            842   ;------------------------------------------------------------
0113            843   ;pin                       Allocated to registers 
0113            844   ;------------------------------------------------------------
0113            845   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:191: unsigned int ADC_at_Pin(unsigned char pin)
0113            846   ;        -----------------------------------------
0113            847   ;         function ADC_at_Pin
0113            848   ;        -----------------------------------------
0113            849   _ADC_at_Pin:
0113 8582BB     850            mov     _ADC0MX,dpl
0116            851   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:194: ADINT = 0;
0116 C2ED       852            clr     _ADINT
0118            853   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:195: ADBUSY = 1;     // Convert voltage at the pin
0118 D2EC       854            setb    _ADBUSY
011A            855   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:196: while (!ADINT); // Wait for conversion to complete
011A            856   L007001?:
011A 30ED20     857            jnb     _ADINT,L007001?
011D            858   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:197: return (ADC0);
011D 85BD82     859            mov     dpl,_ADC0
0120 85BE83     860            mov     dph,(_ADC0 >> 8)
0123 22         861            ret
0124            862   ;------------------------------------------------------------
0124            863   ;Allocation info for local variables in function 'Volts_at_Pin'
0124            864   ;------------------------------------------------------------
0124            865   ;pin                       Allocated to registers r2 
0124            866   ;------------------------------------------------------------
0124            867   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:200: float Volts_at_Pin(unsigned char pin)
0124            868   ;        -----------------------------------------
0124            869   ;         function Volts_at_Pin
0124            870   ;        -----------------------------------------
0124            871   _Volts_at_Pin:
0124            872   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:202: return ((ADC_at_Pin(pin)*VDD)/0b_0011_1111_1111_1111);
0124 120000     873            lcall   _ADC_at_Pin
0127 120000     874            lcall   ___uint2fs
012A AA82       875            mov     r2,dpl
012C AB83       876            mov     r3,dph
012E ACF0       877            mov     r4,b
0130 FD         878            mov     r5,a
0131 C002       879            push    ar2
0133 C003       880            push    ar3
0135 C004       881            push    ar4
0137 C005       882            push    ar5
0139 906C8B     883            mov     dptr,#0x6C8B
013C 75F053     884            mov     b,#0x53
013F 7440       885            mov     a,#0x40
0141 120000     886            lcall   ___fsmul
0144 AA82       887            mov     r2,dpl
0146 AB83       888            mov     r3,dph
0148 ACF0       889            mov     r4,b
014A FD         890            mov     r5,a
014B E581       891            mov     a,sp
014D 24FC       892            add     a,#0xfc
014F F581       893            mov     sp,a
0151 E4         894            clr     a
0152 C0E0       895            push    acc
0154 74FC       896            mov     a,#0xFC
0156 C0E0       897            push    acc
0158 747F       898            mov     a,#0x7F
015A C0E0       899            push    acc
015C 7446       900            mov     a,#0x46
015E C0E0       901            push    acc
0160 8A82       902            mov     dpl,r2
0162 8B83       903            mov     dph,r3
0164 8CF0       904            mov     b,r4
0166 ED         905            mov     a,r5
0167 120000     906            lcall   ___fsdiv
016A AA82       907            mov     r2,dpl
016C AB83       908            mov     r3,dph
016E ACF0       909            mov     r4,b
0170 FD         910            mov     r5,a
0171 E581       911            mov     a,sp
0173 24FC       912            add     a,#0xfc
0175 F581       913            mov     sp,a
0177 8A82       914            mov     dpl,r2
0179 8B83       915            mov     dph,r3
017B 8CF0       916            mov     b,r4
017D ED         917            mov     a,r5
017E 22         918            ret
017F            919   ;------------------------------------------------------------
017F            920   ;Allocation info for local variables in function 'LCD_pulse'
017F            921   ;------------------------------------------------------------
017F            922   ;------------------------------------------------------------
017F            923   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:205: void LCD_pulse (void)
017F            924   ;        -----------------------------------------
017F            925   ;         function LCD_pulse
017F            926   ;        -----------------------------------------
017F            927   _LCD_pulse:
017F            928   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:207: LCD_E=1;
017F D2A5       929            setb    _P2_5
0181            930   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:208: Timer3us(40);
0181 758228     931            mov     dpl,#0x28
0184 120000     932            lcall   _Timer3us
0187            933   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:209: LCD_E=0;
0187 C2A5       934            clr     _P2_5
0189 22         935            ret
018A            936   ;------------------------------------------------------------
018A            937   ;Allocation info for local variables in function 'LCD_byte'
018A            938   ;------------------------------------------------------------
018A            939   ;x                         Allocated to registers r2 
018A            940   ;------------------------------------------------------------
018A            941   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:212: void LCD_byte (unsigned char x)
018A            942   ;        -----------------------------------------
018A            943   ;         function LCD_byte
018A            944   ;        -----------------------------------------
018A            945   _LCD_byte:
018A AA82       946            mov     r2,dpl
018C            947   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:215: ACC=x; //Send high nible
018C 8AE0       948            mov     _ACC,r2
018E            949   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:216: LCD_D7=ACC_7;
018E A2E7       950            mov     c,_ACC_7
0190 92A1       951            mov     _P2_1,c
0192            952   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:217: LCD_D6=ACC_6;
0192 A2E6       953            mov     c,_ACC_6
0194 92A2       954            mov     _P2_2,c
0196            955   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:218: LCD_D5=ACC_5;
0196 A2E5       956            mov     c,_ACC_5
0198 92A3       957            mov     _P2_3,c
019A            958   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:219: LCD_D4=ACC_4;
019A A2E4       959            mov     c,_ACC_4
019C 92A4       960            mov     _P2_4,c
019E            961   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:220: LCD_pulse();
019E C002       962            push    ar2
01A0 120000     963            lcall   _LCD_pulse
01A3            964   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:221: Timer3us(40);
01A3 758228     965            mov     dpl,#0x28
01A6 120000     966            lcall   _Timer3us
01A9 D002       967            pop     ar2
01AB            968   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:222: ACC=x; //Send low nible
01AB 8AE0       969            mov     _ACC,r2
01AD            970   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:223: LCD_D7=ACC_3;
01AD A2E3       971            mov     c,_ACC_3
01AF 92A1       972            mov     _P2_1,c
01B1            973   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:224: LCD_D6=ACC_2;
01B1 A2E2       974            mov     c,_ACC_2
01B3 92A2       975            mov     _P2_2,c
01B5            976   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:225: LCD_D5=ACC_1;
01B5 A2E1       977            mov     c,_ACC_1
01B7 92A3       978            mov     _P2_3,c
01B9            979   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:226: LCD_D4=ACC_0;
01B9 A2E0       980            mov     c,_ACC_0
01BB 92A4       981            mov     _P2_4,c
01BD            982   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:227: LCD_pulse();
01BD 020000     983            ljmp    _LCD_pulse
01C0            984   ;------------------------------------------------------------
01C0            985   ;Allocation info for local variables in function 'WriteData'
01C0            986   ;------------------------------------------------------------
01C0            987   ;x                         Allocated to registers r2 
01C0            988   ;------------------------------------------------------------
01C0            989   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:230: void WriteData (unsigned char x)
01C0            990   ;        -----------------------------------------
01C0            991   ;         function WriteData
01C0            992   ;        -----------------------------------------
01C0            993   _WriteData:
01C0 AA82       994            mov     r2,dpl
01C2            995   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:232: LCD_RS=1;
01C2 D2A6       996            setb    _P2_6
01C4            997   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:233: LCD_byte(x);
01C4 8A82       998            mov     dpl,r2
01C6 120000     999            lcall   _LCD_byte
01C9           1000   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:234: waitms(2);
01C9 900002    1001            mov     dptr,#0x0002
01CC 020000    1002            ljmp    _waitms
01CF           1003   ;------------------------------------------------------------
01CF           1004   ;Allocation info for local variables in function 'WriteCommand'
01CF           1005   ;------------------------------------------------------------
01CF           1006   ;x                         Allocated to registers r2 
01CF           1007   ;------------------------------------------------------------
01CF           1008   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:237: void WriteCommand (unsigned char x)
01CF           1009   ;        -----------------------------------------
01CF           1010   ;         function WriteCommand
01CF           1011   ;        -----------------------------------------
01CF           1012   _WriteCommand:
01CF AA82      1013            mov     r2,dpl
01D1           1014   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:239: LCD_RS=0;
01D1 C2A6      1015            clr     _P2_6
01D3           1016   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:240: LCD_byte(x);
01D3 8A82      1017            mov     dpl,r2
01D5 120000    1018            lcall   _LCD_byte
01D8           1019   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:241: waitms(5);
01D8 900005    1020            mov     dptr,#0x0005
01DB 020000    1021            ljmp    _waitms
01DE           1022   ;------------------------------------------------------------
01DE           1023   ;Allocation info for local variables in function 'LCD_4BIT'
01DE           1024   ;------------------------------------------------------------
01DE           1025   ;------------------------------------------------------------
01DE           1026   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:244: void LCD_4BIT (void)
01DE           1027   ;        -----------------------------------------
01DE           1028   ;         function LCD_4BIT
01DE           1029   ;        -----------------------------------------
01DE           1030   _LCD_4BIT:
01DE           1031   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:246: LCD_E=0; // Resting state of LCD's enable is zero
01DE C2A5      1032            clr     _P2_5
01E0           1033   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:248: waitms(20);
01E0 900014    1034            mov     dptr,#0x0014
01E3 120000    1035            lcall   _waitms
01E6           1036   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:250: WriteCommand(0x33);
01E6 758233    1037            mov     dpl,#0x33
01E9 120000    1038            lcall   _WriteCommand
01EC           1039   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:251: WriteCommand(0x33);
01EC 758233    1040            mov     dpl,#0x33
01EF 120000    1041            lcall   _WriteCommand
01F2           1042   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:252: WriteCommand(0x32); // Change to 4-bit mode
01F2 758232    1043            mov     dpl,#0x32
01F5 120000    1044            lcall   _WriteCommand
01F8           1045   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:255: WriteCommand(0x28);
01F8 758228    1046            mov     dpl,#0x28
01FB 120000    1047            lcall   _WriteCommand
01FE           1048   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:256: WriteCommand(0x0c);
01FE 75820C    1049            mov     dpl,#0x0C
0201 120000    1050            lcall   _WriteCommand
0204           1051   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:257: WriteCommand(0x01); // Clear screen command (takes some time)
0204 758201    1052            mov     dpl,#0x01
0207 120000    1053            lcall   _WriteCommand
020A           1054   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:258: waitms(20); // Wait for clear screen command to finsih.
020A 900014    1055            mov     dptr,#0x0014
020D 020000    1056            ljmp    _waitms
0210           1057   ;------------------------------------------------------------
0210           1058   ;Allocation info for local variables in function 'LCDprint'
0210           1059   ;------------------------------------------------------------
0210           1060   ;line                      Allocated with name '_LCDprint_PARM_2'
0210           1061   ;string                    Allocated to registers r2 r3 r4 
0210           1062   ;j                         Allocated to registers r5 r6 
0210           1063   ;------------------------------------------------------------
0210           1064   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:261: void LCDprint(char * string, unsigned char line, bit clear)
0210           1065   ;        -----------------------------------------
0210           1066   ;         function LCDprint
0210           1067   ;        -----------------------------------------
0210           1068   _LCDprint:
0210 AA82      1069            mov     r2,dpl
0212 AB83      1070            mov     r3,dph
0214 ACF0      1071            mov     r4,b
0216           1072   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:265: WriteCommand(line==2?0xc0:0x80);
0216 7402      1073            mov     a,#0x02
0218 B59060    1074            cjne    a,_LCDprint_PARM_2,L014013?
021B 7DC0      1075            mov     r5,#0xC0
021D 8000      1076            sjmp    L014014?
021F           1077   L014013?:
021F 7D80      1078            mov     r5,#0x80
0221           1079   L014014?:
0221 8D82      1080            mov     dpl,r5
0223 C002      1081            push    ar2
0225 C003      1082            push    ar3
0227 C004      1083            push    ar4
0229 120000    1084            lcall   _WriteCommand
022C           1085   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:266: waitms(5);
022C 900005    1086            mov     dptr,#0x0005
022F 120000    1087            lcall   _waitms
0232 D004      1088            pop     ar4
0234 D003      1089            pop     ar3
0236 D002      1090            pop     ar2
0238           1091   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:267: for(j=0; string[j]!=0; j++)    WriteData(string[j]);// Write the message
0238 7D00      1092            mov     r5,#0x00
023A 7E00      1093            mov     r6,#0x00
023C           1094   L014003?:
023C ED        1095            mov     a,r5
023D 2A        1096            add     a,r2
023E FF        1097            mov     r7,a
023F EE        1098            mov     a,r6
0240 3B        1099            addc    a,r3
0241 F8        1100            mov     r0,a
0242 8C01      1101            mov     ar1,r4
0244 8F82      1102            mov     dpl,r7
0246 8883      1103            mov     dph,r0
0248 89F0      1104            mov     b,r1
024A 120000    1105            lcall   __gptrget
024D FF        1106            mov     r7,a
024E 6000      1107            jz      L014006?
0250 8F82      1108            mov     dpl,r7
0252 C002      1109            push    ar2
0254 C003      1110            push    ar3
0256 C004      1111            push    ar4
0258 C005      1112            push    ar5
025A C006      1113            push    ar6
025C 120000    1114            lcall   _WriteData
025F D006      1115            pop     ar6
0261 D005      1116            pop     ar5
0263 D004      1117            pop     ar4
0265 D003      1118            pop     ar3
0267 D002      1119            pop     ar2
0269 0D        1120            inc     r5
026A BD00E0    1121            cjne    r5,#0x00,L014003?
026D 0E        1122            inc     r6
026E 8000      1123            sjmp    L014003?
0270           1124   L014006?:
0270           1125   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:268: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
0270 30B0A0    1126            jnb     _LCDprint_PARM_3,L014011?
0273 8D02      1127            mov     ar2,r5
0275 8E03      1128            mov     ar3,r6
0277           1129   L014007?:
0277 C3        1130            clr     c
0278 EA        1131            mov     a,r2
0279 9410      1132            subb    a,#0x10
027B EB        1133            mov     a,r3
027C 6480      1134            xrl     a,#0x80
027E 9480      1135            subb    a,#0x80
0280 5000      1136            jnc     L014011?
0282 758220    1137            mov     dpl,#0x20
0285 C002      1138            push    ar2
0287 C003      1139            push    ar3
0289 120000    1140            lcall   _WriteData
028C D003      1141            pop     ar3
028E D002      1142            pop     ar2
0290 0A        1143            inc     r2
0291 BA00E0    1144            cjne    r2,#0x00,L014007?
0294 0B        1145            inc     r3
0295 8000      1146            sjmp    L014007?
0297           1147   L014011?:
0297 22        1148            ret
0298           1149   ;------------------------------------------------------------
0298           1150   ;Allocation info for local variables in function 'getsn'
0298           1151   ;------------------------------------------------------------
0298           1152   ;len                       Allocated with name '_getsn_PARM_2'
0298           1153   ;buff                      Allocated with name '_getsn_buff_1_70'
0298           1154   ;j                         Allocated with name '_getsn_sloc0_1_0'
0298           1155   ;c                         Allocated to registers r3 
0298           1156   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
0298           1157   ;------------------------------------------------------------
0298           1158   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:271: int getsn (char * buff, int len)
0298           1159   ;        -----------------------------------------
0298           1160   ;         function getsn
0298           1161   ;        -----------------------------------------
0298           1162   _getsn:
0298 8582E0    1163            mov     _getsn_buff_1_70,dpl
029B 8583E1    1164            mov     (_getsn_buff_1_70 + 1),dph
029E 85F0E2    1165            mov     (_getsn_buff_1_70 + 2),b
02A1           1166   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:276: for(j=0; j<(len-1); j++)
02A1 E4        1167            clr     a
02A2 F530      1168            mov     _getsn_sloc0_1_0,a
02A4 F531      1169            mov     (_getsn_sloc0_1_0 + 1),a
02A6 E540      1170            mov     a,_getsn_PARM_2
02A8 24FF      1171            add     a,#0xff
02AA FF        1172            mov     r7,a
02AB E541      1173            mov     a,(_getsn_PARM_2 + 1)
02AD 34FF      1174            addc    a,#0xff
02AF F8        1175            mov     r0,a
02B0 7900      1176            mov     r1,#0x00
02B2 7A00      1177            mov     r2,#0x00
02B4           1178   L015005?:
02B4 C3        1179            clr     c
02B5 E9        1180            mov     a,r1
02B6 9F        1181            subb    a,r7
02B7 EA        1182            mov     a,r2
02B8 6480      1183            xrl     a,#0x80
02BA 88F0      1184            mov     b,r0
02BC 63F080    1185            xrl     b,#0x80
02BF 95F0      1186            subb    a,b
02C1 5000      1187            jnc     L015008?
02C3           1188   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:278: c=getchar();
02C3 C002      1189            push    ar2
02C5 C007      1190            push    ar7
02C7 C000      1191            push    ar0
02C9 C001      1192            push    ar1
02CB 120000    1193            lcall   _getchar
02CE AB82      1194            mov     r3,dpl
02D0 D001      1195            pop     ar1
02D2 D000      1196            pop     ar0
02D4 D007      1197            pop     ar7
02D6 D002      1198            pop     ar2
02D8           1199   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:279: if ( (c=='\n') || (c=='\r') )
02D8 BB0AE0    1200            cjne    r3,#0x0A,L015015?
02DB 8000      1201            sjmp    L015001?
02DD           1202   L015015?:
02DD BB0D60    1203            cjne    r3,#0x0D,L015002?
02E0           1204   L015001?:
02E0           1205   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:281: buff[j]=0;
02E0 E530      1206            mov     a,_getsn_sloc0_1_0
02E2 25E0      1207            add     a,_getsn_buff_1_70
02E4 FC        1208            mov     r4,a
02E5 E531      1209            mov     a,(_getsn_sloc0_1_0 + 1)
02E7 35E1      1210            addc    a,(_getsn_buff_1_70 + 1)
02E9 FD        1211            mov     r5,a
02EA AEE2      1212            mov     r6,(_getsn_buff_1_70 + 2)
02EC 8C82      1213            mov     dpl,r4
02EE 8D83      1214            mov     dph,r5
02F0 8EF0      1215            mov     b,r6
02F2 E4        1216            clr     a
02F3 120000    1217            lcall   __gptrput
02F6           1218   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:282: return j;
02F6 853082    1219            mov     dpl,_getsn_sloc0_1_0
02F9 853183    1220            mov     dph,(_getsn_sloc0_1_0 + 1)
02FC 22        1221            ret
02FD           1222   L015002?:
02FD           1223   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:286: buff[j]=c;
02FD E9        1224            mov     a,r1
02FE 25E0      1225            add     a,_getsn_buff_1_70
0300 FC        1226            mov     r4,a
0301 EA        1227            mov     a,r2
0302 35E1      1228            addc    a,(_getsn_buff_1_70 + 1)
0304 FD        1229            mov     r5,a
0305 AEE2      1230            mov     r6,(_getsn_buff_1_70 + 2)
0307 8C82      1231            mov     dpl,r4
0309 8D83      1232            mov     dph,r5
030B 8EF0      1233            mov     b,r6
030D EB        1234            mov     a,r3
030E 120000    1235            lcall   __gptrput
0311           1236   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:276: for(j=0; j<(len-1); j++)
0311 09        1237            inc     r1
0312 B900E0    1238            cjne    r1,#0x00,L015018?
0315 0A        1239            inc     r2
0316           1240   L015018?:
0316 8930      1241            mov     _getsn_sloc0_1_0,r1
0318 8A31      1242            mov     (_getsn_sloc0_1_0 + 1),r2
031A 8000      1243            sjmp    L015005?
031C           1244   L015008?:
031C           1245   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:289: buff[j]=0;
031C E530      1246            mov     a,_getsn_sloc0_1_0
031E 25E0      1247            add     a,_getsn_buff_1_70
0320 FA        1248            mov     r2,a
0321 E531      1249            mov     a,(_getsn_sloc0_1_0 + 1)
0323 35E1      1250            addc    a,(_getsn_buff_1_70 + 1)
0325 FB        1251            mov     r3,a
0326 ACE2      1252            mov     r4,(_getsn_buff_1_70 + 2)
0328 8A82      1253            mov     dpl,r2
032A 8B83      1254            mov     dph,r3
032C 8CF0      1255            mov     b,r4
032E E4        1256            clr     a
032F 120000    1257            lcall   __gptrput
0332           1258   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:290: return len;
0332 854082    1259            mov     dpl,_getsn_PARM_2
0335 854183    1260            mov     dph,(_getsn_PARM_2 + 1)
0338 22        1261            ret
0339           1262   ;------------------------------------------------------------
0339           1263   ;Allocation info for local variables in function 'TIMER0_Init'
0339           1264   ;------------------------------------------------------------
0339           1265   ;------------------------------------------------------------
0339           1266   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:293: void TIMER0_Init(void)
0339           1267   ;        -----------------------------------------
0339           1268   ;         function TIMER0_Init
0339           1269   ;        -----------------------------------------
0339           1270   _TIMER0_Init:
0339           1271   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:295: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0339 5389F0    1272            anl     _TMOD,#0xF0
033C           1273   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:296: TMOD|=0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
033C 438901    1274            orl     _TMOD,#0x01
033F           1275   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:297: TR0=0; // Stop Timer/Counter 0
033F C28C      1276            clr     _TR0
0341 22        1277            ret
0342           1278   ;------------------------------------------------------------
0342           1279   ;Allocation info for local variables in function 'getPeriod'
0342           1280   ;------------------------------------------------------------
0342           1281   ;pin                       Allocated to registers r2 
0342           1282   ;overflow_count            Allocated to registers r3 r4 
0342           1283   ;------------------------------------------------------------
0342           1284   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:300: float getPeriod(unsigned char pin) 
0342           1285   ;        -----------------------------------------
0342           1286   ;         function getPeriod
0342           1287   ;        -----------------------------------------
0342           1288   _getPeriod:
0342 AA82      1289            mov     r2,dpl
0344           1290   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:305: TR0 = 0;
0344 C28C      1291            clr     _TR0
0346           1292   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:306: TMOD &= 0xF0;
0346 5389F0    1293            anl     _TMOD,#0xF0
0349           1294   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:307: TMOD |= 0x01;
0349 438901    1295            orl     _TMOD,#0x01
034C           1296   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:308: TH0 = 0;
034C 758C00    1297            mov     _TH0,#0x00
034F           1298   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:309: TL0 = 0;
034F 758A00    1299            mov     _TL0,#0x00
0352           1300   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:310: TF0 = 0;
0352 C28D      1301            clr     _TF0
0354           1302   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:313: while (Volts_at_Pin(pin) != 0);
0354           1303   L017001?:
0354 8A82      1304            mov     dpl,r2
0356 C002      1305            push    ar2
0358 120000    1306            lcall   _Volts_at_Pin
035B AB82      1307            mov     r3,dpl
035D AC83      1308            mov     r4,dph
035F ADF0      1309            mov     r5,b
0361 FE        1310            mov     r6,a
0362 D002      1311            pop     ar2
0364 EB        1312            mov     a,r3
0365 4C        1313            orl     a,r4
0366 4D        1314            orl     a,r5
0367 8EF0      1315            mov     b,r6
0369 C2F7      1316            clr     b.7 ; Clear the sign bit
036B 45F0      1317            orl     a,b
036D 7000      1318            jnz     L017001?
036F           1319   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:314: while (Volts_at_Pin(pin) == 0);
036F           1320   L017004?:
036F 8A82      1321            mov     dpl,r2
0371 C002      1322            push    ar2
0373 120000    1323            lcall   _Volts_at_Pin
0376 AB82      1324            mov     r3,dpl
0378 AC83      1325            mov     r4,dph
037A ADF0      1326            mov     r5,b
037C FE        1327            mov     r6,a
037D D002      1328            pop     ar2
037F EB        1329            mov     a,r3
0380 4C        1330            orl     a,r4
0381 4D        1331            orl     a,r5
0382 8EF0      1332            mov     b,r6
0384 C2F7      1333            clr     b.7 ; Clear the sign bit
0386 45F0      1334            orl     a,b
0388 6000      1335            jz      L017004?
038A           1336   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:317: TR0 = 1;
038A D28C      1337            setb    _TR0
038C           1338   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:318: while (Volts_at_Pin(pin) != 0) {
038C 7B00      1339            mov     r3,#0x00
038E 7C00      1340            mov     r4,#0x00
0390           1341   L017009?:
0390 8A82      1342            mov     dpl,r2
0392 C002      1343            push    ar2
0394 C003      1344            push    ar3
0396 C004      1345            push    ar4
0398 120000    1346            lcall   _Volts_at_Pin
039B AD82      1347            mov     r5,dpl
039D AE83      1348            mov     r6,dph
039F AFF0      1349            mov     r7,b
03A1 F8        1350            mov     r0,a
03A2 D004      1351            pop     ar4
03A4 D003      1352            pop     ar3
03A6 D002      1353            pop     ar2
03A8 ED        1354            mov     a,r5
03A9 4E        1355            orl     a,r6
03AA 4F        1356            orl     a,r7
03AB 88F0      1357            mov     b,r0
03AD C2F7      1358            clr     b.7 ; Clear the sign bit
03AF 45F0      1359            orl     a,b
03B1 6000      1360            jz      L017011?
03B3           1361   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:319: if (TF0) {
03B3           1362   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:320: TF0 = 0;
03B3 108D20    1363            jbc     _TF0,L017024?
03B6 8000      1364            sjmp    L017009?
03B8           1365   L017024?:
03B8           1366   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:321: overflow_count++;
03B8 0B        1367            inc     r3
03B9 BB00A0    1368            cjne    r3,#0x00,L017009?
03BC 0C        1369            inc     r4
03BD 8000      1370            sjmp    L017009?
03BF           1371   L017011?:
03BF           1372   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:326: TR0 = 0;
03BF C28C      1373            clr     _TR0
03C1           1374   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:327: return (overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK)*2008;
03C1 8B82      1375            mov     dpl,r3
03C3 8C83      1376            mov     dph,r4
03C5 120000    1377            lcall   ___uint2fs
03C8 AA82      1378            mov     r2,dpl
03CA AB83      1379            mov     r3,dph
03CC ACF0      1380            mov     r4,b
03CE FD        1381            mov     r5,a
03CF C002      1382            push    ar2
03D1 C003      1383            push    ar3
03D3 C004      1384            push    ar4
03D5 C005      1385            push    ar5
03D7 900000    1386            mov     dptr,#0x0000
03DA 75F080    1387            mov     b,#0x80
03DD 7447      1388            mov     a,#0x47
03DF 120000    1389            lcall   ___fsmul
03E2 AA82      1390            mov     r2,dpl
03E4 AB83      1391            mov     r3,dph
03E6 ACF0      1392            mov     r4,b
03E8 FD        1393            mov     r5,a
03E9 E581      1394            mov     a,sp
03EB 24FC      1395            add     a,#0xfc
03ED F581      1396            mov     sp,a
03EF 858C82    1397            mov     dpl,_TH0
03F2 C002      1398            push    ar2
03F4 C003      1399            push    ar3
03F6 C004      1400            push    ar4
03F8 C005      1401            push    ar5
03FA 120000    1402            lcall   ___uchar2fs
03FD AE82      1403            mov     r6,dpl
03FF AF83      1404            mov     r7,dph
0401 A8F0      1405            mov     r0,b
0403 F9        1406            mov     r1,a
0404 C006      1407            push    ar6
0406 C007      1408            push    ar7
0408 C000      1409            push    ar0
040A C001      1410            push    ar1
040C 900000    1411            mov     dptr,#0x0000
040F 75F080    1412            mov     b,#0x80
0412 7443      1413            mov     a,#0x43
0414 120000    1414            lcall   ___fsmul
0417 AE82      1415            mov     r6,dpl
0419 AF83      1416            mov     r7,dph
041B A8F0      1417            mov     r0,b
041D F9        1418            mov     r1,a
041E E581      1419            mov     a,sp
0420 24FC      1420            add     a,#0xfc
0422 F581      1421            mov     sp,a
0424 D005      1422            pop     ar5
0426 D004      1423            pop     ar4
0428 D003      1424            pop     ar3
042A D002      1425            pop     ar2
042C C006      1426            push    ar6
042E C007      1427            push    ar7
0430 C000      1428            push    ar0
0432 C001      1429            push    ar1
0434 8A82      1430            mov     dpl,r2
0436 8B83      1431            mov     dph,r3
0438 8CF0      1432            mov     b,r4
043A ED        1433            mov     a,r5
043B 120000    1434            lcall   ___fsadd
043E AA82      1435            mov     r2,dpl
0440 AB83      1436            mov     r3,dph
0442 ACF0      1437            mov     r4,b
0444 FD        1438            mov     r5,a
0445 E581      1439            mov     a,sp
0447 24FC      1440            add     a,#0xfc
0449 F581      1441            mov     sp,a
044B AE8A      1442            mov     r6,_TL0
044D 7F00      1443            mov     r7,#0x00
044F 8E82      1444            mov     dpl,r6
0451 8F83      1445            mov     dph,r7
0453 C002      1446            push    ar2
0455 C003      1447            push    ar3
0457 C004      1448            push    ar4
0459 C005      1449            push    ar5
045B 120000    1450            lcall   ___sint2fs
045E AE82      1451            mov     r6,dpl
0460 AF83      1452            mov     r7,dph
0462 A8F0      1453            mov     r0,b
0464 F9        1454            mov     r1,a
0465 D005      1455            pop     ar5
0467 D004      1456            pop     ar4
0469 D003      1457            pop     ar3
046B D002      1458            pop     ar2
046D C006      1459            push    ar6
046F C007      1460            push    ar7
0471 C000      1461            push    ar0
0473 C001      1462            push    ar1
0475 8A82      1463            mov     dpl,r2
0477 8B83      1464            mov     dph,r3
0479 8CF0      1465            mov     b,r4
047B ED        1466            mov     a,r5
047C 120000    1467            lcall   ___fsadd
047F AA82      1468            mov     r2,dpl
0481 AB83      1469            mov     r3,dph
0483 ACF0      1470            mov     r4,b
0485 FD        1471            mov     r5,a
0486 E581      1472            mov     a,sp
0488 24FC      1473            add     a,#0xfc
048A F581      1474            mov     sp,a
048C C002      1475            push    ar2
048E C003      1476            push    ar3
0490 C004      1477            push    ar4
0492 C005      1478            push    ar5
0494 907633    1479            mov     dptr,#0x7633
0497 75F0AF    1480            mov     b,#0xAF
049A 7439      1481            mov     a,#0x39
049C 120000    1482            lcall   ___fsmul
049F AA82      1483            mov     r2,dpl
04A1 AB83      1484            mov     r3,dph
04A3 ACF0      1485            mov     r4,b
04A5 FD        1486            mov     r5,a
04A6 E581      1487            mov     a,sp
04A8 24FC      1488            add     a,#0xfc
04AA F581      1489            mov     sp,a
04AC 8A82      1490            mov     dpl,r2
04AE 8B83      1491            mov     dph,r3
04B0 8CF0      1492            mov     b,r4
04B2 ED        1493            mov     a,r5
04B3 22        1494            ret
04B4           1495   ;------------------------------------------------------------
04B4           1496   ;Allocation info for local variables in function 'getTimeDifference'
04B4           1497   ;------------------------------------------------------------
04B4           1498   ;pin2                      Allocated with name '_getTimeDifference_PARM_2'
04B4           1499   ;pin1                      Allocated to registers r2 
04B4           1500   ;overflow_count            Allocated to registers r2 r3 
04B4           1501   ;------------------------------------------------------------
04B4           1502   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:330: float getTimeDifference(unsigned char pin1, unsigned char pin2)
04B4           1503   ;        -----------------------------------------
04B4           1504   ;         function getTimeDifference
04B4           1505   ;        -----------------------------------------
04B4           1506   _getTimeDifference:
04B4 AA82      1507            mov     r2,dpl
04B6           1508   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:336: TR0 = 0;
04B6 C28C      1509            clr     _TR0
04B8           1510   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:337: TMOD &= 0xF0;
04B8 5389F0    1511            anl     _TMOD,#0xF0
04BB           1512   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:338: TMOD |= 0x01;
04BB 438901    1513            orl     _TMOD,#0x01
04BE           1514   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:339: TH0 = 0;
04BE 758C00    1515            mov     _TH0,#0x00
04C1           1516   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:340: TL0 = 0;
04C1 758A00    1517            mov     _TL0,#0x00
04C4           1518   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:341: TF0 = 0;
04C4 C28D      1519            clr     _TF0
04C6           1520   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:344: while (Volts_at_Pin(pin1) == 0);
04C6           1521   L018001?:
04C6 8A82      1522            mov     dpl,r2
04C8 C002      1523            push    ar2
04CA 120000    1524            lcall   _Volts_at_Pin
04CD AB82      1525            mov     r3,dpl
04CF AC83      1526            mov     r4,dph
04D1 ADF0      1527            mov     r5,b
04D3 FE        1528            mov     r6,a
04D4 D002      1529            pop     ar2
04D6 EB        1530            mov     a,r3
04D7 4C        1531            orl     a,r4
04D8 4D        1532            orl     a,r5
04D9 8EF0      1533            mov     b,r6
04DB C2F7      1534            clr     b.7 ; Clear the sign bit
04DD 45F0      1535            orl     a,b
04DF 6000      1536            jz      L018001?
04E1           1537   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:345: while (Volts_at_Pin(pin1) != 0);
04E1           1538   L018004?:
04E1 8A82      1539            mov     dpl,r2
04E3 C002      1540            push    ar2
04E5 120000    1541            lcall   _Volts_at_Pin
04E8 AB82      1542            mov     r3,dpl
04EA AC83      1543            mov     r4,dph
04EC ADF0      1544            mov     r5,b
04EE FE        1545            mov     r6,a
04EF D002      1546            pop     ar2
04F1 EB        1547            mov     a,r3
04F2 4C        1548            orl     a,r4
04F3 4D        1549            orl     a,r5
04F4 8EF0      1550            mov     b,r6
04F6 C2F7      1551            clr     b.7 ; Clear the sign bit
04F8 45F0      1552            orl     a,b
04FA 7000      1553            jnz     L018004?
04FC           1554   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:347: TR0 = 1; // Starts Timer
04FC D28C      1555            setb    _TR0
04FE           1556   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:349: P1_4 = 1;
04FE D294      1557            setb    _P1_4
0500           1558   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:350: while (Volts_at_Pin(pin2) == 0) {
0500 7A00      1559            mov     r2,#0x00
0502 7B00      1560            mov     r3,#0x00
0504           1561   L018009?:
0504 850082    1562            mov     dpl,_getTimeDifference_PARM_2
0507 C002      1563            push    ar2
0509 C003      1564            push    ar3
050B 120000    1565            lcall   _Volts_at_Pin
050E AC82      1566            mov     r4,dpl
0510 AD83      1567            mov     r5,dph
0512 AEF0      1568            mov     r6,b
0514 FF        1569            mov     r7,a
0515 D003      1570            pop     ar3
0517 D002      1571            pop     ar2
0519 EC        1572            mov     a,r4
051A 4D        1573            orl     a,r5
051B 4E        1574            orl     a,r6
051C 8FF0      1575            mov     b,r7
051E C2F7      1576            clr     b.7 ; Clear the sign bit
0520 45F0      1577            orl     a,b
0522 7000      1578            jnz     L018026?
0524           1579   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:351: if (TF0) {
0524           1580   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:352: TF0 = 0;
0524 108D28    1581            jbc     _TF0,L018033?
0527 8000      1582            sjmp    L018009?
0529           1583   L018033?:
0529           1584   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:353: overflow_count++;
0529 0A        1585            inc     r2
052A           1586   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:357: while (Volts_at_Pin(pin2) != 0) {
052A BA00A8    1587            cjne    r2,#0x00,L018009?
052D 0B        1588            inc     r3
052E 8000      1589            sjmp    L018009?
0530           1590   L018026?:
0530           1591   L018014?:
0530 850082    1592            mov     dpl,_getTimeDifference_PARM_2
0533 C002      1593            push    ar2
0535 C003      1594            push    ar3
0537 120000    1595            lcall   _Volts_at_Pin
053A AC82      1596            mov     r4,dpl
053C AD83      1597            mov     r5,dph
053E AEF0      1598            mov     r6,b
0540 FF        1599            mov     r7,a
0541 D003      1600            pop     ar3
0543 D002      1601            pop     ar2
0545 EC        1602            mov     a,r4
0546 4D        1603            orl     a,r5
0547 4E        1604            orl     a,r6
0548 8FF0      1605            mov     b,r7
054A C2F7      1606            clr     b.7 ; Clear the sign bit
054C 45F0      1607            orl     a,b
054E 6000      1608            jz      L018016?
0550           1609   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:358: if (TF0) {
0550           1610   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:359: TF0 = 0;
0550 108DE8    1611            jbc     _TF0,L018036?
0553 8000      1612            sjmp    L018014?
0555           1613   L018036?:
0555           1614   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:360: overflow_count++;
0555 0A        1615            inc     r2
0556 BA0068    1616            cjne    r2,#0x00,L018014?
0559 0B        1617            inc     r3
055A 8000      1618            sjmp    L018014?
055C           1619   L018016?:
055C           1620   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:364: P1_4 = 0;
055C C294      1621            clr     _P1_4
055E           1622   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:365: TR0 = 0; // Stops timer
055E C28C      1623            clr     _TR0
0560           1624   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:367: return (overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK)*1004;
0560 8A82      1625            mov     dpl,r2
0562 8B83      1626            mov     dph,r3
0564 120000    1627            lcall   ___uint2fs
0567 AA82      1628            mov     r2,dpl
0569 AB83      1629            mov     r3,dph
056B ACF0      1630            mov     r4,b
056D FD        1631            mov     r5,a
056E C002      1632            push    ar2
0570 C003      1633            push    ar3
0572 C004      1634            push    ar4
0574 C005      1635            push    ar5
0576 900000    1636            mov     dptr,#0x0000
0579 75F080    1637            mov     b,#0x80
057C 7447      1638            mov     a,#0x47
057E 120000    1639            lcall   ___fsmul
0581 AA82      1640            mov     r2,dpl
0583 AB83      1641            mov     r3,dph
0585 ACF0      1642            mov     r4,b
0587 FD        1643            mov     r5,a
0588 E581      1644            mov     a,sp
058A 24FC      1645            add     a,#0xfc
058C F581      1646            mov     sp,a
058E 858C82    1647            mov     dpl,_TH0
0591 C002      1648            push    ar2
0593 C003      1649            push    ar3
0595 C004      1650            push    ar4
0597 C005      1651            push    ar5
0599 120000    1652            lcall   ___uchar2fs
059C AE82      1653            mov     r6,dpl
059E AF83      1654            mov     r7,dph
05A0 A8F0      1655            mov     r0,b
05A2 F9        1656            mov     r1,a
05A3 C006      1657            push    ar6
05A5 C007      1658            push    ar7
05A7 C000      1659            push    ar0
05A9 C001      1660            push    ar1
05AB 900000    1661            mov     dptr,#0x0000
05AE 75F080    1662            mov     b,#0x80
05B1 7443      1663            mov     a,#0x43
05B3 120000    1664            lcall   ___fsmul
05B6 AE82      1665            mov     r6,dpl
05B8 AF83      1666            mov     r7,dph
05BA A8F0      1667            mov     r0,b
05BC F9        1668            mov     r1,a
05BD E581      1669            mov     a,sp
05BF 24FC      1670            add     a,#0xfc
05C1 F581      1671            mov     sp,a
05C3 D005      1672            pop     ar5
05C5 D004      1673            pop     ar4
05C7 D003      1674            pop     ar3
05C9 D002      1675            pop     ar2
05CB C006      1676            push    ar6
05CD C007      1677            push    ar7
05CF C000      1678            push    ar0
05D1 C001      1679            push    ar1
05D3 8A82      1680            mov     dpl,r2
05D5 8B83      1681            mov     dph,r3
05D7 8CF0      1682            mov     b,r4
05D9 ED        1683            mov     a,r5
05DA 120000    1684            lcall   ___fsadd
05DD AA82      1685            mov     r2,dpl
05DF AB83      1686            mov     r3,dph
05E1 ACF0      1687            mov     r4,b
05E3 FD        1688            mov     r5,a
05E4 E581      1689            mov     a,sp
05E6 24FC      1690            add     a,#0xfc
05E8 F581      1691            mov     sp,a
05EA AE8A      1692            mov     r6,_TL0
05EC 7F00      1693            mov     r7,#0x00
05EE 8E82      1694            mov     dpl,r6
05F0 8F83      1695            mov     dph,r7
05F2 C002      1696            push    ar2
05F4 C003      1697            push    ar3
05F6 C004      1698            push    ar4
05F8 C005      1699            push    ar5
05FA 120000    1700            lcall   ___sint2fs
05FD AE82      1701            mov     r6,dpl
05FF AF83      1702            mov     r7,dph
0601 A8F0      1703            mov     r0,b
0603 F9        1704            mov     r1,a
0604 D005      1705            pop     ar5
0606 D004      1706            pop     ar4
0608 D003      1707            pop     ar3
060A D002      1708            pop     ar2
060C C006      1709            push    ar6
060E C007      1710            push    ar7
0610 C000      1711            push    ar0
0612 C001      1712            push    ar1
0614 8A82      1713            mov     dpl,r2
0616 8B83      1714            mov     dph,r3
0618 8CF0      1715            mov     b,r4
061A ED        1716            mov     a,r5
061B 120000    1717            lcall   ___fsadd
061E AA82      1718            mov     r2,dpl
0620 AB83      1719            mov     r3,dph
0622 ACF0      1720            mov     r4,b
0624 FD        1721            mov     r5,a
0625 E581      1722            mov     a,sp
0627 24FC      1723            add     a,#0xfc
0629 F581      1724            mov     sp,a
062B C002      1725            push    ar2
062D C003      1726            push    ar3
062F C004      1727            push    ar4
0631 C005      1728            push    ar5
0633 907633    1729            mov     dptr,#0x7633
0636 75F02F    1730            mov     b,#0x2F
0639 7439      1731            mov     a,#0x39
063B 120000    1732            lcall   ___fsmul
063E AA82      1733            mov     r2,dpl
0640 AB83      1734            mov     r3,dph
0642 ACF0      1735            mov     r4,b
0644 FD        1736            mov     r5,a
0645 E581      1737            mov     a,sp
0647 24FC      1738            add     a,#0xfc
0649 F581      1739            mov     sp,a
064B 8A82      1740            mov     dpl,r2
064D 8B83      1741            mov     dph,r3
064F 8CF0      1742            mov     b,r4
0651 ED        1743            mov     a,r5
0652 22        1744            ret
0653           1745   ;------------------------------------------------------------
0653           1746   ;Allocation info for local variables in function 'main'
0653           1747   ;------------------------------------------------------------
0653           1748   ;VMax                      Allocated to registers r2 r3 r4 r5 
0653           1749   ;period                    Allocated with name '_main_period_1_88'
0653           1750   ;timeDifference            Allocated to registers r6 r7 r0 r1 
0653           1751   ;phaseDifference           Allocated with name '_main_phaseDifference_1_88'
0653           1752   ;output_buffer             Allocated with name '_main_output_buffer_1_88'
0653           1753   ;------------------------------------------------------------
0653           1754   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:373: void main (void)
0653           1755   ;        -----------------------------------------
0653           1756   ;         function main
0653           1757   ;        -----------------------------------------
0653           1758   _main:
0653           1759   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:381: TIMER0_Init();
0653 120000    1760            lcall   _TIMER0_Init
0656           1761   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:382: LCD_4BIT();
0656 120000    1762            lcall   _LCD_4BIT
0659           1763   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:384: waitms(500); // Give PuTTy a chance to start before sending
0659 9001F4    1764            mov     dptr,#0x01F4
065C 120000    1765            lcall   _waitms
065F           1766   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:385: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
065F 7428      1767            mov     a,#__str_0
0661 C0E0      1768            push    acc
0663 74C2      1769            mov     a,#(__str_0 >> 8)
0665 C0E0      1770            push    acc
0667 7480      1771            mov     a,#0x80
0669 C0E0      1772            push    acc
066B 120000    1773            lcall   _printf
066E 1581      1774            dec     sp
0670 1581      1775            dec     sp
0672 1581      1776            dec     sp
0674           1777   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:387: InitPinADC(0, 1); // Configure P0_1 as analog input
0674 75C001    1778            mov     _InitPinADC_PARM_2,#0x01
0677 758200    1779            mov     dpl,#0x00
067A 120000    1780            lcall   _InitPinADC
067D           1781   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:389: InitADC();
067D 120000    1782            lcall   _InitADC
0680           1783   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:391: while(1)
0680           1784   L019015?:
0680           1785   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:393: VMax = 0.0;
0680 7A00      1786            mov     r2,#0x00
0682 7B00      1787            mov     r3,#0x00
0684 7C00      1788            mov     r4,#0x00
0686 7D00      1789            mov     r5,#0x00
0688           1790   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:394: period = getPeriod(P0_1); //Gets Period
0688 A281      1791            mov     c,_P0_1
068A E4        1792            clr     a
068B 33        1793            rlc     a
068C F582      1794            mov     dpl,a
068E C002      1795            push    ar2
0690 C003      1796            push    ar3
0692 C004      1797            push    ar4
0694 C005      1798            push    ar5
0696 120000    1799            lcall   _getPeriod
0699 858280    1800            mov     _main_period_1_88,dpl
069C 858381    1801            mov     (_main_period_1_88 + 1),dph
069F 85F082    1802            mov     (_main_period_1_88 + 2),b
06A2 F583      1803            mov     (_main_period_1_88 + 3),a
06A4 D005      1804            pop     ar5
06A6 D004      1805            pop     ar4
06A8 D003      1806            pop     ar3
06AA D002      1807            pop     ar2
06AC           1808   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:396: while (Volts_at_Pin(P0_1) != 0);
06AC           1809   L019001?:
06AC A281      1810            mov     c,_P0_1
06AE E4        1811            clr     a
06AF 33        1812            rlc     a
06B0 F582      1813            mov     dpl,a
06B2 C002      1814            push    ar2
06B4 C003      1815            push    ar3
06B6 C004      1816            push    ar4
06B8 C005      1817            push    ar5
06BA 120000    1818            lcall   _Volts_at_Pin
06BD AE82      1819            mov     r6,dpl
06BF AF83      1820            mov     r7,dph
06C1 A8F0      1821            mov     r0,b
06C3 F9        1822            mov     r1,a
06C4 D005      1823            pop     ar5
06C6 D004      1824            pop     ar4
06C8 D003      1825            pop     ar3
06CA D002      1826            pop     ar2
06CC EE        1827            mov     a,r6
06CD 4F        1828            orl     a,r7
06CE 48        1829            orl     a,r0
06CF 89F0      1830            mov     b,r1
06D1 C2F7      1831            clr     b.7 ; Clear the sign bit
06D3 45F0      1832            orl     a,b
06D5 7000      1833            jnz     L019001?
06D7           1834   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:397: while (Volts_at_Pin(P0_1) < 0.5);
06D7           1835   L019004?:
06D7 A281      1836            mov     c,_P0_1
06D9 E4        1837            clr     a
06DA 33        1838            rlc     a
06DB F582      1839            mov     dpl,a
06DD C002      1840            push    ar2
06DF C003      1841            push    ar3
06E1 C004      1842            push    ar4
06E3 C005      1843            push    ar5
06E5 120000    1844            lcall   _Volts_at_Pin
06E8 AE82      1845            mov     r6,dpl
06EA AF83      1846            mov     r7,dph
06EC A8F0      1847            mov     r0,b
06EE F9        1848            mov     r1,a
06EF E4        1849            clr     a
06F0 C0E0      1850            push    acc
06F2 C0E0      1851            push    acc
06F4 C0E0      1852            push    acc
06F6 743F      1853            mov     a,#0x3F
06F8 C0E0      1854            push    acc
06FA 8E82      1855            mov     dpl,r6
06FC 8F83      1856            mov     dph,r7
06FE 88F0      1857            mov     b,r0
0700 E9        1858            mov     a,r1
0701 120000    1859            lcall   ___fslt
0704 AE82      1860            mov     r6,dpl
0706 E581      1861            mov     a,sp
0708 24FC      1862            add     a,#0xfc
070A F581      1863            mov     sp,a
070C D005      1864            pop     ar5
070E D004      1865            pop     ar4
0710 D003      1866            pop     ar3
0712 D002      1867            pop     ar2
0714 EE        1868            mov     a,r6
0715 7000      1869            jnz     L019004?
0717           1870   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:399: while (Volts_at_Pin(P0_1) != 0) 
0717           1871   L019009?:
0717 A281      1872            mov     c,_P0_1
0719 E4        1873            clr     a
071A 33        1874            rlc     a
071B F582      1875            mov     dpl,a
071D C002      1876            push    ar2
071F C003      1877            push    ar3
0721 C004      1878            push    ar4
0723 C005      1879            push    ar5
0725 120000    1880            lcall   _Volts_at_Pin
0728 AE82      1881            mov     r6,dpl
072A AF83      1882            mov     r7,dph
072C A8F0      1883            mov     r0,b
072E F9        1884            mov     r1,a
072F D005      1885            pop     ar5
0731 D004      1886            pop     ar4
0733 D003      1887            pop     ar3
0735 D002      1888            pop     ar2
0737 EE        1889            mov     a,r6
0738 4F        1890            orl     a,r7
0739 48        1891            orl     a,r0
073A 89F0      1892            mov     b,r1
073C C2F7      1893            clr     b.7 ; Clear the sign bit
073E 45F0      1894            orl     a,b
0740 6000      1895            jz      L019011?
0742           1896   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:401: if(Volts_at_Pin(P0_1) > VMax)
0742 A281      1897            mov     c,_P0_1
0744 E4        1898            clr     a
0745 33        1899            rlc     a
0746 F582      1900            mov     dpl,a
0748 C002      1901            push    ar2
074A C003      1902            push    ar3
074C C004      1903            push    ar4
074E C005      1904            push    ar5
0750 120000    1905            lcall   _Volts_at_Pin
0753 AE82      1906            mov     r6,dpl
0755 AF83      1907            mov     r7,dph
0757 A8F0      1908            mov     r0,b
0759 F9        1909            mov     r1,a
075A D005      1910            pop     ar5
075C D004      1911            pop     ar4
075E D003      1912            pop     ar3
0760 D002      1913            pop     ar2
0762 C002      1914            push    ar2
0764 C003      1915            push    ar3
0766 C004      1916            push    ar4
0768 C005      1917            push    ar5
076A C002      1918            push    ar2
076C C003      1919            push    ar3
076E C004      1920            push    ar4
0770 C005      1921            push    ar5
0772 8E82      1922            mov     dpl,r6
0774 8F83      1923            mov     dph,r7
0776 88F0      1924            mov     b,r0
0778 E9        1925            mov     a,r1
0779 120000    1926            lcall   ___fsgt
077C AE82      1927            mov     r6,dpl
077E E581      1928            mov     a,sp
0780 24FC      1929            add     a,#0xfc
0782 F581      1930            mov     sp,a
0784 D005      1931            pop     ar5
0786 D004      1932            pop     ar4
0788 D003      1933            pop     ar3
078A D002      1934            pop     ar2
078C EE        1935            mov     a,r6
078D 6000      1936            jz      L019009?
078F           1937   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:402: VMax = Volts_at_Pin(P0_1);
078F A281      1938            mov     c,_P0_1
0791 E4        1939            clr     a
0792 33        1940            rlc     a
0793 F582      1941            mov     dpl,a
0795 120000    1942            lcall   _Volts_at_Pin
0798 AA82      1943            mov     r2,dpl
079A AB83      1944            mov     r3,dph
079C ACF0      1945            mov     r4,b
079E FD        1946            mov     r5,a
079F 020000    1947            ljmp    L019009?
07A2           1948   L019011?:
07A2           1949   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:405: timeDifference = getTimeDifference(P0_1, P0_2);
07A2 A281      1950            mov     c,_P0_1
07A4 E4        1951            clr     a
07A5 33        1952            rlc     a
07A6 F582      1953            mov     dpl,a
07A8 A282      1954            mov     c,_P0_2
07AA E4        1955            clr     a
07AB 33        1956            rlc     a
07AC F500      1957            mov     _getTimeDifference_PARM_2,a
07AE C002      1958            push    ar2
07B0 C003      1959            push    ar3
07B2 C004      1960            push    ar4
07B4 C005      1961            push    ar5
07B6 120000    1962            lcall   _getTimeDifference
07B9 AE82      1963            mov     r6,dpl
07BB AF83      1964            mov     r7,dph
07BD A8F0      1965            mov     r0,b
07BF F9        1966            mov     r1,a
07C0           1967   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:410: phaseDifference = (timeDifference/period) * 360;
07C0 C080      1968            push    _main_period_1_88
07C2 C081      1969            push    (_main_period_1_88 + 1)
07C4 C082      1970            push    (_main_period_1_88 + 2)
07C6 C083      1971            push    (_main_period_1_88 + 3)
07C8 8E82      1972            mov     dpl,r6
07CA 8F83      1973            mov     dph,r7
07CC 88F0      1974            mov     b,r0
07CE E9        1975            mov     a,r1
07CF 120000    1976            lcall   ___fsdiv
07D2 AE82      1977            mov     r6,dpl
07D4 AF83      1978            mov     r7,dph
07D6 A8F0      1979            mov     r0,b
07D8 F9        1980            mov     r1,a
07D9 E581      1981            mov     a,sp
07DB 24FC      1982            add     a,#0xfc
07DD F581      1983            mov     sp,a
07DF C006      1984            push    ar6
07E1 C007      1985            push    ar7
07E3 C000      1986            push    ar0
07E5 C001      1987            push    ar1
07E7 900000    1988            mov     dptr,#0x0000
07EA 75F0B4    1989            mov     b,#0xB4
07ED 7443      1990            mov     a,#0x43
07EF 120000    1991            lcall   ___fsmul
07F2 AE82      1992            mov     r6,dpl
07F4 AF83      1993            mov     r7,dph
07F6 A8F0      1994            mov     r0,b
07F8 F9        1995            mov     r1,a
07F9 E581      1996            mov     a,sp
07FB 24FC      1997            add     a,#0xfc
07FD F581      1998            mov     sp,a
07FF 8E82      1999            mov     dpl,r6
0801 8F83      2000            mov     dph,r7
0803 88F0      2001            mov     b,r0
0805 E9        2002            mov     a,r1
0806 120000    2003            lcall   ___fs2sint
0809 8582D0    2004            mov     _main_phaseDifference_1_88,dpl
080C 8583D1    2005            mov     (_main_phaseDifference_1_88 + 1),dph
080F D005      2006            pop     ar5
0811 D004      2007            pop     ar4
0813 D003      2008            pop     ar3
0815 D002      2009            pop     ar2
0817           2010   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:412: if(phaseDifference > 180)
0817 C3        2011            clr     c
0818 74B4      2012            mov     a,#0xB4
081A 95D0      2013            subb    a,_main_phaseDifference_1_88
081C E4        2014            clr     a
081D 6480      2015            xrl     a,#0x80
081F 85D1F0    2016            mov     b,(_main_phaseDifference_1_88 + 1)
0822 63F080    2017            xrl     b,#0x80
0825 95F0      2018            subb    a,b
0827 5000      2019            jnc     L019013?
0829           2020   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:413: phaseDifference = phaseDifference - (360+180);
0829 E5D0      2021            mov     a,_main_phaseDifference_1_88
082B 24E4      2022            add     a,#0xe4
082D F5D0      2023            mov     _main_phaseDifference_1_88,a
082F E5D1      2024            mov     a,(_main_phaseDifference_1_88 + 1)
0831 34FD      2025            addc    a,#0xfd
0833 F5D1      2026            mov     (_main_phaseDifference_1_88 + 1),a
0835           2027   L019013?:
0835           2028   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:415: sprintf(output_buffer, "T=%0.1fms Vr=%0.1fV", period, VMax*0.7071);
0835 C002      2029            push    ar2
0837 C003      2030            push    ar3
0839 C004      2031            push    ar4
083B C005      2032            push    ar5
083D 900481    2033            mov     dptr,#0x0481
0840 75F035    2034            mov     b,#0x35
0843 743F      2035            mov     a,#0x3F
0845 120000    2036            lcall   ___fsmul
0848 AA82      2037            mov     r2,dpl
084A AB83      2038            mov     r3,dph
084C ACF0      2039            mov     r4,b
084E FD        2040            mov     r5,a
084F E581      2041            mov     a,sp
0851 24FC      2042            add     a,#0xfc
0853 F581      2043            mov     sp,a
0855 C002      2044            push    ar2
0857 C003      2045            push    ar3
0859 C004      2046            push    ar4
085B C005      2047            push    ar5
085D C002      2048            push    ar2
085F C003      2049            push    ar3
0861 C004      2050            push    ar4
0863 C005      2051            push    ar5
0865 C080      2052            push    _main_period_1_88
0867 C081      2053            push    (_main_period_1_88 + 1)
0869 C082      2054            push    (_main_period_1_88 + 2)
086B C083      2055            push    (_main_period_1_88 + 3)
086D 74E8      2056            mov     a,#__str_1
086F C0E0      2057            push    acc
0871 74C4      2058            mov     a,#(__str_1 >> 8)
0873 C0E0      2059            push    acc
0875 7480      2060            mov     a,#0x80
0877 C0E0      2061            push    acc
0879 7420      2062            mov     a,#_main_output_buffer_1_88
087B C0E0      2063            push    acc
087D 74B3      2064            mov     a,#(_main_output_buffer_1_88 >> 8)
087F C0E0      2065            push    acc
0881 7440      2066            mov     a,#0x40
0883 C0E0      2067            push    acc
0885 120000    2068            lcall   _sprintf
0888 E581      2069            mov     a,sp
088A 24F2      2070            add     a,#0xf2
088C F581      2071            mov     sp,a
088E           2072   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:416: LCDprint(output_buffer, 1, 1);         
088E 759001    2073            mov     _LCDprint_PARM_2,#0x01
0891 D2B0      2074            setb    _LCDprint_PARM_3
0893 90B320    2075            mov     dptr,#_main_output_buffer_1_88
0896 75F040    2076            mov     b,#0x40
0899 120000    2077            lcall   _LCDprint
089C           2078   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:417: sprintf(output_buffer, "P=%d f=%0.1fHz", phaseDifference, 1/(period/1000));
089C E4        2079            clr     a
089D C0E0      2080            push    acc
089F C0E0      2081            push    acc
08A1 747A      2082            mov     a,#0x7A
08A3 C0E0      2083            push    acc
08A5 7444      2084            mov     a,#0x44
08A7 C0E0      2085            push    acc
08A9 858082    2086            mov     dpl,_main_period_1_88
08AC 858183    2087            mov     dph,(_main_period_1_88 + 1)
08AF 8582F0    2088            mov     b,(_main_period_1_88 + 2)
08B2 E583      2089            mov     a,(_main_period_1_88 + 3)
08B4 120000    2090            lcall   ___fsdiv
08B7 A882      2091            mov     r0,dpl
08B9 A983      2092            mov     r1,dph
08BB AEF0      2093            mov     r6,b
08BD FF        2094            mov     r7,a
08BE E581      2095            mov     a,sp
08C0 24FC      2096            add     a,#0xfc
08C2 F581      2097            mov     sp,a
08C4 C000      2098            push    ar0
08C6 C001      2099            push    ar1
08C8 C006      2100            push    ar6
08CA C007      2101            push    ar7
08CC 900000    2102            mov     dptr,#0x0000
08CF 75F080    2103            mov     b,#0x80
08D2 743F      2104            mov     a,#0x3F
08D4 120000    2105            lcall   ___fsdiv
08D7 AE82      2106            mov     r6,dpl
08D9 AF83      2107            mov     r7,dph
08DB A8F0      2108            mov     r0,b
08DD F9        2109            mov     r1,a
08DE E581      2110            mov     a,sp
08E0 24FC      2111            add     a,#0xfc
08E2 F581      2112            mov     sp,a
08E4 C006      2113            push    ar6
08E6 C007      2114            push    ar7
08E8 C000      2115            push    ar0
08EA C001      2116            push    ar1
08EC C0D0      2117            push    _main_phaseDifference_1_88
08EE C0D1      2118            push    (_main_phaseDifference_1_88 + 1)
08F0 7468      2119            mov     a,#__str_2
08F2 C0E0      2120            push    acc
08F4 74C5      2121            mov     a,#(__str_2 >> 8)
08F6 C0E0      2122            push    acc
08F8 7480      2123            mov     a,#0x80
08FA C0E0      2124            push    acc
08FC 7420      2125            mov     a,#_main_output_buffer_1_88
08FE C0E0      2126            push    acc
0900 74B3      2127            mov     a,#(_main_output_buffer_1_88 >> 8)
0902 C0E0      2128            push    acc
0904 7440      2129            mov     a,#0x40
0906 C0E0      2130            push    acc
0908 120000    2131            lcall   _sprintf
090B E581      2132            mov     a,sp
090D 24F4      2133            add     a,#0xf4
090F F581      2134            mov     sp,a
0911           2135   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:418: LCDprint(output_buffer, 2, 1);         
0911 759002    2136            mov     _LCDprint_PARM_2,#0x02
0914 D2B0      2137            setb    _LCDprint_PARM_3
0916 90B320    2138            mov     dptr,#_main_output_buffer_1_88
0919 75F040    2139            mov     b,#0x40
091C 120000    2140            lcall   _LCDprint
091F D005      2141            pop     ar5
0921 D004      2142            pop     ar4
0923 D003      2143            pop     ar3
0925 D002      2144            pop     ar2
0927           2145   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB5-Phasor Analysis\Lab5.c:420: printf("T=%f, Vr=%f, P=%d\n", period, VMax*0.7071, phaseDifference);
0927 C0D0      2146            push    _main_phaseDifference_1_88
0929 C0D1      2147            push    (_main_phaseDifference_1_88 + 1)
092B C002      2148            push    ar2
092D C003      2149            push    ar3
092F C004      2150            push    ar4
0931 C005      2151            push    ar5
0933 C080      2152            push    _main_period_1_88
0935 C081      2153            push    (_main_period_1_88 + 1)
0937 C082      2154            push    (_main_period_1_88 + 2)
0939 C083      2155            push    (_main_period_1_88 + 3)
093B 74A8      2156            mov     a,#__str_3
093D C0E0      2157            push    acc
093F 74C5      2158            mov     a,#(__str_3 >> 8)
0941 C0E0      2159            push    acc
0943 7480      2160            mov     a,#0x80
0945 C0E0      2161            push    acc
0947 120000    2162            lcall   _printf
094A E581      2163            mov     a,sp
094C 24F3      2164            add     a,#0xf3
094E F581      2165            mov     sp,a
0950 020000    2166            ljmp    L019015?
0953           2167            rseg R_CSEG
0953           2168   
0000           2169            rseg R_XINIT
0000           2170   
0000           2171            rseg R_CONST
0000           2172   __str_0:
0000 1B        2173            db 0x1B
0001 5B324A    2174            db '[2J'
0004 00        2175            db 0x00
0005           2176   __str_1:
0005 543D2530  2177            db 'T=%0.1fms Vr=%0.1fV'
     2E31666D
     73205672
     3D25302E
     316656
0018 00        2178            db 0x00
0019           2179   __str_2:
0019 503D2564  2180            db 'P=%d f=%0.1fHz'
     20663D25
     302E3166
     487A
0027 00        2181            db 0x00
0028           2182   __str_3:
0028 543D2566  2183            db 'T=%f, Vr=%f, P=%d'
     2C205672
     3D25662C
     20503D25
     64
0039 0A        2184            db 0x0A
003A 00        2185            db 0x00
003B           2186   
0003           2187            CSEG
0003           2188   
0003           2189   end

0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Tue Feb 28 13:14:28 2023
0000              5   ;--------------------------------------------------------
                  5   $name lab4
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _TIMER0_Init
0000             29            public _f2c
0000             30            public _getsn
0000             31            public _LCDprint
0000             32            public _LCD_4BIT
0000             33            public _WriteCommand
0000             34            public _WriteData
0000             35            public _LCD_byte
0000             36            public _LCD_pulse
0000             37            public _waitms
0000             38            public _Timer3us
0000             39            public __c51_external_startup
0000             40            public _LCDprint_PARM_3
0000             41            public _getsn_PARM_2
0000             42            public _LCDprint_PARM_2
0000             43            public _overflow_count
0000             44   ;--------------------------------------------------------
0000             45   ; Special Function Registers
0000             46   ;--------------------------------------------------------
0000             47   _ACC            DATA 0xe0
0000             48   _ADC0ASAH       DATA 0xb6
0000             49   _ADC0ASAL       DATA 0xb5
0000             50   _ADC0ASCF       DATA 0xa1
0000             51   _ADC0ASCT       DATA 0xc7
0000             52   _ADC0CF0        DATA 0xbc
0000             53   _ADC0CF1        DATA 0xb9
0000             54   _ADC0CF2        DATA 0xdf
0000             55   _ADC0CN0        DATA 0xe8
0000             56   _ADC0CN1        DATA 0xb2
0000             57   _ADC0CN2        DATA 0xb3
0000             58   _ADC0GTH        DATA 0xc4
0000             59   _ADC0GTL        DATA 0xc3
0000             60   _ADC0H          DATA 0xbe
0000             61   _ADC0L          DATA 0xbd
0000             62   _ADC0LTH        DATA 0xc6
0000             63   _ADC0LTL        DATA 0xc5
0000             64   _ADC0MX         DATA 0xbb
0000             65   _B              DATA 0xf0
0000             66   _CKCON0         DATA 0x8e
0000             67   _CKCON1         DATA 0xa6
0000             68   _CLEN0          DATA 0xc6
0000             69   _CLIE0          DATA 0xc7
0000             70   _CLIF0          DATA 0xe8
0000             71   _CLKSEL         DATA 0xa9
0000             72   _CLOUT0         DATA 0xd1
0000             73   _CLU0CF         DATA 0xb1
0000             74   _CLU0FN         DATA 0xaf
0000             75   _CLU0MX         DATA 0x84
0000             76   _CLU1CF         DATA 0xb3
0000             77   _CLU1FN         DATA 0xb2
0000             78   _CLU1MX         DATA 0x85
0000             79   _CLU2CF         DATA 0xb6
0000             80   _CLU2FN         DATA 0xb5
0000             81   _CLU2MX         DATA 0x91
0000             82   _CLU3CF         DATA 0xbf
0000             83   _CLU3FN         DATA 0xbe
0000             84   _CLU3MX         DATA 0xae
0000             85   _CMP0CN0        DATA 0x9b
0000             86   _CMP0CN1        DATA 0x99
0000             87   _CMP0MD         DATA 0x9d
0000             88   _CMP0MX         DATA 0x9f
0000             89   _CMP1CN0        DATA 0xbf
0000             90   _CMP1CN1        DATA 0xac
0000             91   _CMP1MD         DATA 0xab
0000             92   _CMP1MX         DATA 0xaa
0000             93   _CRC0CN0        DATA 0xce
0000             94   _CRC0CN1        DATA 0x86
0000             95   _CRC0CNT        DATA 0xd3
0000             96   _CRC0DAT        DATA 0xcb
0000             97   _CRC0FLIP       DATA 0xcf
0000             98   _CRC0IN         DATA 0xca
0000             99   _CRC0ST         DATA 0xd2
0000            100   _DAC0CF0        DATA 0x91
0000            101   _DAC0CF1        DATA 0x92
0000            102   _DAC0H          DATA 0x85
0000            103   _DAC0L          DATA 0x84
0000            104   _DAC1CF0        DATA 0x93
0000            105   _DAC1CF1        DATA 0x94
0000            106   _DAC1H          DATA 0x8a
0000            107   _DAC1L          DATA 0x89
0000            108   _DAC2CF0        DATA 0x95
0000            109   _DAC2CF1        DATA 0x96
0000            110   _DAC2H          DATA 0x8c
0000            111   _DAC2L          DATA 0x8b
0000            112   _DAC3CF0        DATA 0x9a
0000            113   _DAC3CF1        DATA 0x9c
0000            114   _DAC3H          DATA 0x8e
0000            115   _DAC3L          DATA 0x8d
0000            116   _DACGCF0        DATA 0x88
0000            117   _DACGCF1        DATA 0x98
0000            118   _DACGCF2        DATA 0xa2
0000            119   _DERIVID        DATA 0xad
0000            120   _DEVICEID       DATA 0xb5
0000            121   _DPH            DATA 0x83
0000            122   _DPL            DATA 0x82
0000            123   _EIE1           DATA 0xe6
0000            124   _EIE2           DATA 0xf3
0000            125   _EIP1           DATA 0xbb
0000            126   _EIP1H          DATA 0xee
0000            127   _EIP2           DATA 0xed
0000            128   _EIP2H          DATA 0xf6
0000            129   _EMI0CN         DATA 0xe7
0000            130   _FLKEY          DATA 0xb7
0000            131   _HFO0CAL        DATA 0xc7
0000            132   _HFO1CAL        DATA 0xd6
0000            133   _HFOCN          DATA 0xef
0000            134   _I2C0ADM        DATA 0xff
0000            135   _I2C0CN0        DATA 0xba
0000            136   _I2C0DIN        DATA 0xbc
0000            137   _I2C0DOUT       DATA 0xbb
0000            138   _I2C0FCN0       DATA 0xad
0000            139   _I2C0FCN1       DATA 0xab
0000            140   _I2C0FCT        DATA 0xf5
0000            141   _I2C0SLAD       DATA 0xbd
0000            142   _I2C0STAT       DATA 0xb9
0000            143   _IE             DATA 0xa8
0000            144   _IP             DATA 0xb8
0000            145   _IPH            DATA 0xf2
0000            146   _IT01CF         DATA 0xe4
0000            147   _LFO0CN         DATA 0xb1
0000            148   _P0             DATA 0x80
0000            149   _P0MASK         DATA 0xfe
0000            150   _P0MAT          DATA 0xfd
0000            151   _P0MDIN         DATA 0xf1
0000            152   _P0MDOUT        DATA 0xa4
0000            153   _P0SKIP         DATA 0xd4
0000            154   _P1             DATA 0x90
0000            155   _P1MASK         DATA 0xee
0000            156   _P1MAT          DATA 0xed
0000            157   _P1MDIN         DATA 0xf2
0000            158   _P1MDOUT        DATA 0xa5
0000            159   _P1SKIP         DATA 0xd5
0000            160   _P2             DATA 0xa0
0000            161   _P2MASK         DATA 0xfc
0000            162   _P2MAT          DATA 0xfb
0000            163   _P2MDIN         DATA 0xf3
0000            164   _P2MDOUT        DATA 0xa6
0000            165   _P2SKIP         DATA 0xcc
0000            166   _P3             DATA 0xb0
0000            167   _P3MDIN         DATA 0xf4
0000            168   _P3MDOUT        DATA 0x9c
0000            169   _PCA0CENT       DATA 0x9e
0000            170   _PCA0CLR        DATA 0x9c
0000            171   _PCA0CN0        DATA 0xd8
0000            172   _PCA0CPH0       DATA 0xfc
0000            173   _PCA0CPH1       DATA 0xea
0000            174   _PCA0CPH2       DATA 0xec
0000            175   _PCA0CPH3       DATA 0xf5
0000            176   _PCA0CPH4       DATA 0x85
0000            177   _PCA0CPH5       DATA 0xde
0000            178   _PCA0CPL0       DATA 0xfb
0000            179   _PCA0CPL1       DATA 0xe9
0000            180   _PCA0CPL2       DATA 0xeb
0000            181   _PCA0CPL3       DATA 0xf4
0000            182   _PCA0CPL4       DATA 0x84
0000            183   _PCA0CPL5       DATA 0xdd
0000            184   _PCA0CPM0       DATA 0xda
0000            185   _PCA0CPM1       DATA 0xdb
0000            186   _PCA0CPM2       DATA 0xdc
0000            187   _PCA0CPM3       DATA 0xae
0000            188   _PCA0CPM4       DATA 0xaf
0000            189   _PCA0CPM5       DATA 0xcc
0000            190   _PCA0H          DATA 0xfa
0000            191   _PCA0L          DATA 0xf9
0000            192   _PCA0MD         DATA 0xd9
0000            193   _PCA0POL        DATA 0x96
0000            194   _PCA0PWM        DATA 0xf7
0000            195   _PCON0          DATA 0x87
0000            196   _PCON1          DATA 0xcd
0000            197   _PFE0CN         DATA 0xc1
0000            198   _PRTDRV         DATA 0xf6
0000            199   _PSCTL          DATA 0x8f
0000            200   _PSTAT0         DATA 0xaa
0000            201   _PSW            DATA 0xd0
0000            202   _REF0CN         DATA 0xd1
0000            203   _REG0CN         DATA 0xc9
0000            204   _REVID          DATA 0xb6
0000            205   _RSTSRC         DATA 0xef
0000            206   _SBCON1         DATA 0x94
0000            207   _SBRLH1         DATA 0x96
0000            208   _SBRLL1         DATA 0x95
0000            209   _SBUF           DATA 0x99
0000            210   _SBUF0          DATA 0x99
0000            211   _SBUF1          DATA 0x92
0000            212   _SCON           DATA 0x98
0000            213   _SCON0          DATA 0x98
0000            214   _SCON1          DATA 0xc8
0000            215   _SFRPAGE        DATA 0xa7
0000            216   _SFRPGCN        DATA 0xbc
0000            217   _SFRSTACK       DATA 0xd7
0000            218   _SMB0ADM        DATA 0xd6
0000            219   _SMB0ADR        DATA 0xd7
0000            220   _SMB0CF         DATA 0xc1
0000            221   _SMB0CN0        DATA 0xc0
0000            222   _SMB0DAT        DATA 0xc2
0000            223   _SMB0FCN0       DATA 0xc3
0000            224   _SMB0FCN1       DATA 0xc4
0000            225   _SMB0FCT        DATA 0xef
0000            226   _SMB0RXLN       DATA 0xc5
0000            227   _SMB0TC         DATA 0xac
0000            228   _SMOD1          DATA 0x93
0000            229   _SP             DATA 0x81
0000            230   _SPI0CFG        DATA 0xa1
0000            231   _SPI0CKR        DATA 0xa2
0000            232   _SPI0CN0        DATA 0xf8
0000            233   _SPI0DAT        DATA 0xa3
0000            234   _SPI0FCN0       DATA 0x9a
0000            235   _SPI0FCN1       DATA 0x9b
0000            236   _SPI0FCT        DATA 0xf7
0000            237   _SPI0PCF        DATA 0xdf
0000            238   _TCON           DATA 0x88
0000            239   _TH0            DATA 0x8c
0000            240   _TH1            DATA 0x8d
0000            241   _TL0            DATA 0x8a
0000            242   _TL1            DATA 0x8b
0000            243   _TMOD           DATA 0x89
0000            244   _TMR2CN0        DATA 0xc8
0000            245   _TMR2CN1        DATA 0xfd
0000            246   _TMR2H          DATA 0xcf
0000            247   _TMR2L          DATA 0xce
0000            248   _TMR2RLH        DATA 0xcb
0000            249   _TMR2RLL        DATA 0xca
0000            250   _TMR3CN0        DATA 0x91
0000            251   _TMR3CN1        DATA 0xfe
0000            252   _TMR3H          DATA 0x95
0000            253   _TMR3L          DATA 0x94
0000            254   _TMR3RLH        DATA 0x93
0000            255   _TMR3RLL        DATA 0x92
0000            256   _TMR4CN0        DATA 0x98
0000            257   _TMR4CN1        DATA 0xff
0000            258   _TMR4H          DATA 0xa5
0000            259   _TMR4L          DATA 0xa4
0000            260   _TMR4RLH        DATA 0xa3
0000            261   _TMR4RLL        DATA 0xa2
0000            262   _TMR5CN0        DATA 0xc0
0000            263   _TMR5CN1        DATA 0xf1
0000            264   _TMR5H          DATA 0xd5
0000            265   _TMR5L          DATA 0xd4
0000            266   _TMR5RLH        DATA 0xd3
0000            267   _TMR5RLL        DATA 0xd2
0000            268   _UART0PCF       DATA 0xd9
0000            269   _UART1FCN0      DATA 0x9d
0000            270   _UART1FCN1      DATA 0xd8
0000            271   _UART1FCT       DATA 0xfa
0000            272   _UART1LIN       DATA 0x9e
0000            273   _UART1PCF       DATA 0xda
0000            274   _VDM0CN         DATA 0xff
0000            275   _WDTCN          DATA 0x97
0000            276   _XBR0           DATA 0xe1
0000            277   _XBR1           DATA 0xe2
0000            278   _XBR2           DATA 0xe3
0000            279   _XOSC0CN        DATA 0x86
0000            280   _DPTR           DATA 0x8382
0000            281   _TMR2RL         DATA 0xcbca
0000            282   _TMR3RL         DATA 0x9392
0000            283   _TMR4RL         DATA 0xa3a2
0000            284   _TMR5RL         DATA 0xd3d2
0000            285   _TMR0           DATA 0x8c8a
0000            286   _TMR1           DATA 0x8d8b
0000            287   _TMR2           DATA 0xcfce
0000            288   _TMR3           DATA 0x9594
0000            289   _TMR4           DATA 0xa5a4
0000            290   _TMR5           DATA 0xd5d4
0000            291   _SBRL1          DATA 0x9695
0000            292   _PCA0           DATA 0xfaf9
0000            293   _PCA0CP0        DATA 0xfcfb
0000            294   _PCA0CP1        DATA 0xeae9
0000            295   _PCA0CP2        DATA 0xeceb
0000            296   _PCA0CP3        DATA 0xf5f4
0000            297   _PCA0CP4        DATA 0x8584
0000            298   _PCA0CP5        DATA 0xdedd
0000            299   _ADC0ASA        DATA 0xb6b5
0000            300   _ADC0GT         DATA 0xc4c3
0000            301   _ADC0           DATA 0xbebd
0000            302   _ADC0LT         DATA 0xc6c5
0000            303   _DAC0           DATA 0x8584
0000            304   _DAC1           DATA 0x8a89
0000            305   _DAC2           DATA 0x8c8b
0000            306   _DAC3           DATA 0x8e8d
0000            307   ;--------------------------------------------------------
0000            308   ; special function bits
0000            309   ;--------------------------------------------------------
0000            310   _ACC_0          BIT 0xe0
0000            311   _ACC_1          BIT 0xe1
0000            312   _ACC_2          BIT 0xe2
0000            313   _ACC_3          BIT 0xe3
0000            314   _ACC_4          BIT 0xe4
0000            315   _ACC_5          BIT 0xe5
0000            316   _ACC_6          BIT 0xe6
0000            317   _ACC_7          BIT 0xe7
0000            318   _TEMPE          BIT 0xe8
0000            319   _ADGN0          BIT 0xe9
0000            320   _ADGN1          BIT 0xea
0000            321   _ADWINT         BIT 0xeb
0000            322   _ADBUSY         BIT 0xec
0000            323   _ADINT          BIT 0xed
0000            324   _IPOEN          BIT 0xee
0000            325   _ADEN           BIT 0xef
0000            326   _B_0            BIT 0xf0
0000            327   _B_1            BIT 0xf1
0000            328   _B_2            BIT 0xf2
0000            329   _B_3            BIT 0xf3
0000            330   _B_4            BIT 0xf4
0000            331   _B_5            BIT 0xf5
0000            332   _B_6            BIT 0xf6
0000            333   _B_7            BIT 0xf7
0000            334   _C0FIF          BIT 0xe8
0000            335   _C0RIF          BIT 0xe9
0000            336   _C1FIF          BIT 0xea
0000            337   _C1RIF          BIT 0xeb
0000            338   _C2FIF          BIT 0xec
0000            339   _C2RIF          BIT 0xed
0000            340   _C3FIF          BIT 0xee
0000            341   _C3RIF          BIT 0xef
0000            342   _D1SRC0         BIT 0x88
0000            343   _D1SRC1         BIT 0x89
0000            344   _D1AMEN         BIT 0x8a
0000            345   _D01REFSL       BIT 0x8b
0000            346   _D3SRC0         BIT 0x8c
0000            347   _D3SRC1         BIT 0x8d
0000            348   _D3AMEN         BIT 0x8e
0000            349   _D23REFSL       BIT 0x8f
0000            350   _D0UDIS         BIT 0x98
0000            351   _D1UDIS         BIT 0x99
0000            352   _D2UDIS         BIT 0x9a
0000            353   _D3UDIS         BIT 0x9b
0000            354   _EX0            BIT 0xa8
0000            355   _ET0            BIT 0xa9
0000            356   _EX1            BIT 0xaa
0000            357   _ET1            BIT 0xab
0000            358   _ES0            BIT 0xac
0000            359   _ET2            BIT 0xad
0000            360   _ESPI0          BIT 0xae
0000            361   _EA             BIT 0xaf
0000            362   _PX0            BIT 0xb8
0000            363   _PT0            BIT 0xb9
0000            364   _PX1            BIT 0xba
0000            365   _PT1            BIT 0xbb
0000            366   _PS0            BIT 0xbc
0000            367   _PT2            BIT 0xbd
0000            368   _PSPI0          BIT 0xbe
0000            369   _P0_0           BIT 0x80
0000            370   _P0_1           BIT 0x81
0000            371   _P0_2           BIT 0x82
0000            372   _P0_3           BIT 0x83
0000            373   _P0_4           BIT 0x84
0000            374   _P0_5           BIT 0x85
0000            375   _P0_6           BIT 0x86
0000            376   _P0_7           BIT 0x87
0000            377   _P1_0           BIT 0x90
0000            378   _P1_1           BIT 0x91
0000            379   _P1_2           BIT 0x92
0000            380   _P1_3           BIT 0x93
0000            381   _P1_4           BIT 0x94
0000            382   _P1_5           BIT 0x95
0000            383   _P1_6           BIT 0x96
0000            384   _P1_7           BIT 0x97
0000            385   _P2_0           BIT 0xa0
0000            386   _P2_1           BIT 0xa1
0000            387   _P2_2           BIT 0xa2
0000            388   _P2_3           BIT 0xa3
0000            389   _P2_4           BIT 0xa4
0000            390   _P2_5           BIT 0xa5
0000            391   _P2_6           BIT 0xa6
0000            392   _P3_0           BIT 0xb0
0000            393   _P3_1           BIT 0xb1
0000            394   _P3_2           BIT 0xb2
0000            395   _P3_3           BIT 0xb3
0000            396   _P3_4           BIT 0xb4
0000            397   _P3_7           BIT 0xb7
0000            398   _CCF0           BIT 0xd8
0000            399   _CCF1           BIT 0xd9
0000            400   _CCF2           BIT 0xda
0000            401   _CCF3           BIT 0xdb
0000            402   _CCF4           BIT 0xdc
0000            403   _CCF5           BIT 0xdd
0000            404   _CR             BIT 0xde
0000            405   _CF             BIT 0xdf
0000            406   _PARITY         BIT 0xd0
0000            407   _F1             BIT 0xd1
0000            408   _OV             BIT 0xd2
0000            409   _RS0            BIT 0xd3
0000            410   _RS1            BIT 0xd4
0000            411   _F0             BIT 0xd5
0000            412   _AC             BIT 0xd6
0000            413   _CY             BIT 0xd7
0000            414   _RI             BIT 0x98
0000            415   _TI             BIT 0x99
0000            416   _RB8            BIT 0x9a
0000            417   _TB8            BIT 0x9b
0000            418   _REN            BIT 0x9c
0000            419   _CE             BIT 0x9d
0000            420   _SMODE          BIT 0x9e
0000            421   _RI1            BIT 0xc8
0000            422   _TI1            BIT 0xc9
0000            423   _RBX1           BIT 0xca
0000            424   _TBX1           BIT 0xcb
0000            425   _REN1           BIT 0xcc
0000            426   _PERR1          BIT 0xcd
0000            427   _OVR1           BIT 0xce
0000            428   _SI             BIT 0xc0
0000            429   _ACK            BIT 0xc1
0000            430   _ARBLOST        BIT 0xc2
0000            431   _ACKRQ          BIT 0xc3
0000            432   _STO            BIT 0xc4
0000            433   _STA            BIT 0xc5
0000            434   _TXMODE         BIT 0xc6
0000            435   _MASTER         BIT 0xc7
0000            436   _SPIEN          BIT 0xf8
0000            437   _TXNF           BIT 0xf9
0000            438   _NSSMD0         BIT 0xfa
0000            439   _NSSMD1         BIT 0xfb
0000            440   _RXOVRN         BIT 0xfc
0000            441   _MODF           BIT 0xfd
0000            442   _WCOL           BIT 0xfe
0000            443   _SPIF           BIT 0xff
0000            444   _IT0            BIT 0x88
0000            445   _IE0            BIT 0x89
0000            446   _IT1            BIT 0x8a
0000            447   _IE1            BIT 0x8b
0000            448   _TR0            BIT 0x8c
0000            449   _TF0            BIT 0x8d
0000            450   _TR1            BIT 0x8e
0000            451   _TF1            BIT 0x8f
0000            452   _T2XCLK0        BIT 0xc8
0000            453   _T2XCLK1        BIT 0xc9
0000            454   _TR2            BIT 0xca
0000            455   _T2SPLIT        BIT 0xcb
0000            456   _TF2CEN         BIT 0xcc
0000            457   _TF2LEN         BIT 0xcd
0000            458   _TF2L           BIT 0xce
0000            459   _TF2H           BIT 0xcf
0000            460   _T4XCLK0        BIT 0x98
0000            461   _T4XCLK1        BIT 0x99
0000            462   _TR4            BIT 0x9a
0000            463   _T4SPLIT        BIT 0x9b
0000            464   _TF4CEN         BIT 0x9c
0000            465   _TF4LEN         BIT 0x9d
0000            466   _TF4L           BIT 0x9e
0000            467   _TF4H           BIT 0x9f
0000            468   _T5XCLK0        BIT 0xc0
0000            469   _T5XCLK1        BIT 0xc1
0000            470   _TR5            BIT 0xc2
0000            471   _T5SPLIT        BIT 0xc3
0000            472   _TF5CEN         BIT 0xc4
0000            473   _TF5LEN         BIT 0xc5
0000            474   _TF5L           BIT 0xc6
0000            475   _TF5H           BIT 0xc7
0000            476   _RIE            BIT 0xd8
0000            477   _RXTO0          BIT 0xd9
0000            478   _RXTO1          BIT 0xda
0000            479   _RFRQ           BIT 0xdb
0000            480   _TIE            BIT 0xdc
0000            481   _TXHOLD         BIT 0xdd
0000            482   _TXNF1          BIT 0xde
0000            483   _TFRQ           BIT 0xdf
0000            484   ;--------------------------------------------------------
0000            485   ; overlayable register banks
0000            486   ;--------------------------------------------------------
0000            487            rbank0 segment data overlay
0000            488   ;--------------------------------------------------------
0000            489   ; internal ram data
0000            490   ;--------------------------------------------------------
0000            491            rseg R_DSEG
0000            492   _overflow_count:
0000            493            ds 1
0001            494   _LCDprint_PARM_2:
0001            495            ds 1
0002            496   _getsn_PARM_2:
0002            497            ds 2
0004            498   _getsn_buff_1_44:
0004            499            ds 3
0007            500   _getsn_sloc0_1_0:
0007            501            ds 2
0009            502   _main_output_buffer_1_54:
0009            503            ds 20
001D            504   ;--------------------------------------------------------
001D            505   ; overlayable items in internal ram 
001D            506   ;--------------------------------------------------------
0000            507            rseg    R_OSEG
0000            508   ;--------------------------------------------------------
0000            509   ; indirectly addressable internal ram data
0000            510   ;--------------------------------------------------------
0000            511            rseg R_ISEG
0000            512   ;--------------------------------------------------------
0000            513   ; absolute internal ram data
0000            514   ;--------------------------------------------------------
0000            515            DSEG
0000            516   ;--------------------------------------------------------
0000            517   ; bit data
0000            518   ;--------------------------------------------------------
0000            519            rseg R_BSEG
0000            520   _LCDprint_PARM_3:
0000            521            DBIT    1
0001            522   ;--------------------------------------------------------
0001            523   ; paged external ram data
0001            524   ;--------------------------------------------------------
0000            525            rseg R_PSEG
0000            526   ;--------------------------------------------------------
0000            527   ; external ram data
0000            528   ;--------------------------------------------------------
0000            529            rseg R_XSEG
0000            530   ;--------------------------------------------------------
0000            531   ; absolute external ram data
0000            532   ;--------------------------------------------------------
0000            533            XSEG
0000            534   ;--------------------------------------------------------
0000            535   ; external initialized ram data
0000            536   ;--------------------------------------------------------
0000            537            rseg R_IXSEG
0000            538            rseg R_HOME
0000            539            rseg R_GSINIT
0000            540            rseg R_CSEG
0000            541   ;--------------------------------------------------------
0000            542   ; Reset entry point and interrupt vectors
0000            543   ;--------------------------------------------------------
0000            544            CSEG at 0x0000
0000 020000     545            ljmp    _crt0
0003            546   ;--------------------------------------------------------
0003            547   ; global & static initialisations
0003            548   ;--------------------------------------------------------
0000            549            rseg R_HOME
0000            550            rseg R_GSINIT
0000            551            rseg R_GSINIT
0000            552   ;--------------------------------------------------------
0000            553   ; data variables initialization
0000            554   ;--------------------------------------------------------
0000            555            rseg R_DINIT
0000            556            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            557   ;--------------------------------------------------------
0000            558   ; code
0000            559   ;--------------------------------------------------------
0000            560            rseg R_CSEG
0000            561   ;------------------------------------------------------------
0000            562   ;Allocation info for local variables in function '_c51_external_startup'
0000            563   ;------------------------------------------------------------
0000            564   ;------------------------------------------------------------
0000            565   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:26: char _c51_external_startup (void)
0000            566   ;        -----------------------------------------
0000            567   ;         function _c51_external_startup
0000            568   ;        -----------------------------------------
0000            569   __c51_external_startup:
0000            570            using   0
0000            571   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:29: SFRPAGE = 0x00;
0000 75A700     572            mov     _SFRPAGE,#0x00
0003            573   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:30: WDTCN = 0xDE; //First key
0003 7597DE     574            mov     _WDTCN,#0xDE
0006            575   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:31: WDTCN = 0xAD; //Second key
0006 7597AD     576            mov     _WDTCN,#0xAD
0009            577   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:33: VDM0CN |= 0x80;
0009 43FF80     578            orl     _VDM0CN,#0x80
000C            579   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:34: RSTSRC = 0x02;
000C 75EF02     580            mov     _RSTSRC,#0x02
000F            581   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:41: SFRPAGE = 0x10;
000F 75A710     582            mov     _SFRPAGE,#0x10
0012            583   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:42: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     584            mov     _PFE0CN,#0x20
0015            585   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:43: SFRPAGE = 0x00;
0015 75A700     586            mov     _SFRPAGE,#0x00
0018            587   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:64: CLKSEL = 0x00;
0018 75A900     588            mov     _CLKSEL,#0x00
001B            589   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:65: CLKSEL = 0x00;
001B 75A900     590            mov     _CLKSEL,#0x00
001E            591   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:66: while ((CLKSEL & 0x80) == 0);
001E            592   L002001?:
001E E5A9       593            mov     a,_CLKSEL
0020 30E798     594            jnb     acc.7,L002001?
0023            595   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:67: CLKSEL = 0x03;
0023 75A903     596            mov     _CLKSEL,#0x03
0026            597   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:68: CLKSEL = 0x03;
0026 75A903     598            mov     _CLKSEL,#0x03
0029            599   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:69: while ((CLKSEL & 0x80) == 0);
0029            600   L002004?:
0029 E5A9       601            mov     a,_CLKSEL
002B 30E718     602            jnb     acc.7,L002004?
002E            603   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:74: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     604            orl     _P0MDOUT,#0x10
0031            605   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:75: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     606            mov     _XBR0,#0x01
0034            607   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:76: XBR1     = 0X10; // Enable T0 on P0.0
0034 75E210     608            mov     _XBR1,#0x10
0037            609   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:77: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     610            mov     _XBR2,#0x40
003A            611   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:83: SCON0 = 0x10;
003A 759810     612            mov     _SCON0,#0x10
003D            613   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:84: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
003D 858E8E     614            mov     _CKCON0,_CKCON0
0040            615   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:85: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     616            mov     _TH1,#0xE6
0043            617   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:86: TL1 = TH1;      // Init Timer1
0043 858D8B     618            mov     _TL1,_TH1
0046            619   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:87: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     620            anl     _TMOD,#0x0F
0049            621   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:88: TMOD |=  0x20;                       
0049 438920     622            orl     _TMOD,#0x20
004C            623   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:89: TR1 = 1; // START Timer1
004C D28E       624            setb    _TR1
004E            625   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:90: TI = 1;  // Indicate TX0 ready
004E D299       626            setb    _TI
0050            627   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:92: return 0;
0050 758200     628            mov     dpl,#0x00
0053 22         629            ret
0054            630   ;------------------------------------------------------------
0054            631   ;Allocation info for local variables in function 'Timer3us'
0054            632   ;------------------------------------------------------------
0054            633   ;us                        Allocated to registers r2 
0054            634   ;i                         Allocated to registers r3 
0054            635   ;------------------------------------------------------------
0054            636   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:96: void Timer3us(unsigned char us)
0054            637   ;        -----------------------------------------
0054            638   ;         function Timer3us
0054            639   ;        -----------------------------------------
0054            640   _Timer3us:
0054 AA82       641            mov     r2,dpl
0056            642   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:101: CKCON0|=0b_0100_0000;
0056 438E40     643            orl     _CKCON0,#0x40
0059            644   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:103: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0059 7592B8     645            mov     _TMR3RL,#0xB8
005C 7593FF     646            mov     (_TMR3RL >> 8),#0xFF
005F            647   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:104: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
005F 859294     648            mov     _TMR3,_TMR3RL
0062 859395     649            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0065            650   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:106: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
0065 759104     651            mov     _TMR3CN0,#0x04
0068            652   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:107: for (i = 0; i < us; i++)       // Count <us> overflows
0068 7B00       653            mov     r3,#0x00
006A            654   L003006?:
006A C3         655            clr     c
006B EB         656            mov     a,r3
006C 9A         657            subb    a,r2
006D 5000       658            jnc     L003009?
006F            659   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:109: while (!(TMR3CN0 & 0x80));  // Wait for overflow
006F            660   L003001?:
006F E591       661            mov     a,_TMR3CN0
0071 30E718     662            jnb     acc.7,L003001?
0074            663   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:110: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0074 53917F     664            anl     _TMR3CN0,#0x7F
0077            665   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:111: if (TF0)
0077            666   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:113: TF0=0;
0077 108D58     667            jbc     _TF0,L003019?
007A 8000       668            sjmp    L003008?
007C            669   L003019?:
007C            670   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:114: overflow_count++;
007C 0560       671            inc     _overflow_count
007E            672   L003008?:
007E            673   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:107: for (i = 0; i < us; i++)       // Count <us> overflows
007E 0B         674            inc     r3
007F 8000       675            sjmp    L003006?
0081            676   L003009?:
0081            677   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:117: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0081 759100     678            mov     _TMR3CN0,#0x00
0084 22         679            ret
0085            680   ;------------------------------------------------------------
0085            681   ;Allocation info for local variables in function 'waitms'
0085            682   ;------------------------------------------------------------
0085            683   ;ms                        Allocated to registers r2 r3 
0085            684   ;j                         Allocated to registers r2 r3 
0085            685   ;------------------------------------------------------------
0085            686   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:120: void waitms (unsigned int ms)
0085            687   ;        -----------------------------------------
0085            688   ;         function waitms
0085            689   ;        -----------------------------------------
0085            690   _waitms:
0085 AA82       691            mov     r2,dpl
0087 AB83       692            mov     r3,dph
0089            693   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:123: for(j=ms; j!=0; j--)
0089            694   L004001?:
0089 BA0058     695            cjne    r2,#0x00,L004010?
008C BB0058     696            cjne    r3,#0x00,L004010?
008F 22         697            ret
0090            698   L004010?:
0090            699   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:125: Timer3us(249);
0090 7582F9     700            mov     dpl,#0xF9
0093 C002       701            push    ar2
0095 C003       702            push    ar3
0097 120000     703            lcall   _Timer3us
009A            704   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:126: Timer3us(249);
009A 7582F9     705            mov     dpl,#0xF9
009D 120000     706            lcall   _Timer3us
00A0            707   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:127: Timer3us(249);
00A0 7582F9     708            mov     dpl,#0xF9
00A3 120000     709            lcall   _Timer3us
00A6            710   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:128: Timer3us(250);
00A6 7582FA     711            mov     dpl,#0xFA
00A9 120000     712            lcall   _Timer3us
00AC D003       713            pop     ar3
00AE D002       714            pop     ar2
00B0            715   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:123: for(j=ms; j!=0; j--)
00B0 1A         716            dec     r2
00B1 BAFF98     717            cjne    r2,#0xff,L004011?
00B4 1B         718            dec     r3
00B5            719   L004011?:
00B5 8000       720            sjmp    L004001?
00B7            721   ;------------------------------------------------------------
00B7            722   ;Allocation info for local variables in function 'LCD_pulse'
00B7            723   ;------------------------------------------------------------
00B7            724   ;------------------------------------------------------------
00B7            725   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:132: void LCD_pulse (void)
00B7            726   ;        -----------------------------------------
00B7            727   ;         function LCD_pulse
00B7            728   ;        -----------------------------------------
00B7            729   _LCD_pulse:
00B7            730   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:134: LCD_E=1;
00B7 D2A5       731            setb    _P2_5
00B9            732   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:135: Timer3us(40);
00B9 758228     733            mov     dpl,#0x28
00BC 120000     734            lcall   _Timer3us
00BF            735   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:136: LCD_E=0;
00BF C2A5       736            clr     _P2_5
00C1 22         737            ret
00C2            738   ;------------------------------------------------------------
00C2            739   ;Allocation info for local variables in function 'LCD_byte'
00C2            740   ;------------------------------------------------------------
00C2            741   ;x                         Allocated to registers r2 
00C2            742   ;------------------------------------------------------------
00C2            743   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:139: void LCD_byte (unsigned char x)
00C2            744   ;        -----------------------------------------
00C2            745   ;         function LCD_byte
00C2            746   ;        -----------------------------------------
00C2            747   _LCD_byte:
00C2 AA82       748            mov     r2,dpl
00C4            749   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:142: ACC=x; //Send high nible
00C4 8AE0       750            mov     _ACC,r2
00C6            751   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:143: LCD_D7=ACC_7;
00C6 A2E7       752            mov     c,_ACC_7
00C8 92A1       753            mov     _P2_1,c
00CA            754   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:144: LCD_D6=ACC_6;
00CA A2E6       755            mov     c,_ACC_6
00CC 92A2       756            mov     _P2_2,c
00CE            757   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:145: LCD_D5=ACC_5;
00CE A2E5       758            mov     c,_ACC_5
00D0 92A3       759            mov     _P2_3,c
00D2            760   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:146: LCD_D4=ACC_4;
00D2 A2E4       761            mov     c,_ACC_4
00D4 92A4       762            mov     _P2_4,c
00D6            763   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:147: LCD_pulse();
00D6 C002       764            push    ar2
00D8 120000     765            lcall   _LCD_pulse
00DB            766   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:148: Timer3us(40);
00DB 758228     767            mov     dpl,#0x28
00DE 120000     768            lcall   _Timer3us
00E1 D002       769            pop     ar2
00E3            770   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:149: ACC=x; //Send low nible
00E3 8AE0       771            mov     _ACC,r2
00E5            772   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:150: LCD_D7=ACC_3;
00E5 A2E3       773            mov     c,_ACC_3
00E7 92A1       774            mov     _P2_1,c
00E9            775   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:151: LCD_D6=ACC_2;
00E9 A2E2       776            mov     c,_ACC_2
00EB 92A2       777            mov     _P2_2,c
00ED            778   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:152: LCD_D5=ACC_1;
00ED A2E1       779            mov     c,_ACC_1
00EF 92A3       780            mov     _P2_3,c
00F1            781   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:153: LCD_D4=ACC_0;
00F1 A2E0       782            mov     c,_ACC_0
00F3 92A4       783            mov     _P2_4,c
00F5            784   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:154: LCD_pulse();
00F5 020000     785            ljmp    _LCD_pulse
00F8            786   ;------------------------------------------------------------
00F8            787   ;Allocation info for local variables in function 'WriteData'
00F8            788   ;------------------------------------------------------------
00F8            789   ;x                         Allocated to registers r2 
00F8            790   ;------------------------------------------------------------
00F8            791   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:157: void WriteData (unsigned char x)
00F8            792   ;        -----------------------------------------
00F8            793   ;         function WriteData
00F8            794   ;        -----------------------------------------
00F8            795   _WriteData:
00F8 AA82       796            mov     r2,dpl
00FA            797   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:159: LCD_RS=1;
00FA D2A6       798            setb    _P2_6
00FC            799   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:160: LCD_byte(x);
00FC 8A82       800            mov     dpl,r2
00FE 120000     801            lcall   _LCD_byte
0101            802   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:161: waitms(2);
0101 900002     803            mov     dptr,#0x0002
0104 020000     804            ljmp    _waitms
0107            805   ;------------------------------------------------------------
0107            806   ;Allocation info for local variables in function 'WriteCommand'
0107            807   ;------------------------------------------------------------
0107            808   ;x                         Allocated to registers r2 
0107            809   ;------------------------------------------------------------
0107            810   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:164: void WriteCommand (unsigned char x)
0107            811   ;        -----------------------------------------
0107            812   ;         function WriteCommand
0107            813   ;        -----------------------------------------
0107            814   _WriteCommand:
0107 AA82       815            mov     r2,dpl
0109            816   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:166: LCD_RS=0;
0109 C2A6       817            clr     _P2_6
010B            818   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:167: LCD_byte(x);
010B 8A82       819            mov     dpl,r2
010D 120000     820            lcall   _LCD_byte
0110            821   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:168: waitms(5);
0110 900005     822            mov     dptr,#0x0005
0113 020000     823            ljmp    _waitms
0116            824   ;------------------------------------------------------------
0116            825   ;Allocation info for local variables in function 'LCD_4BIT'
0116            826   ;------------------------------------------------------------
0116            827   ;------------------------------------------------------------
0116            828   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:171: void LCD_4BIT (void)
0116            829   ;        -----------------------------------------
0116            830   ;         function LCD_4BIT
0116            831   ;        -----------------------------------------
0116            832   _LCD_4BIT:
0116            833   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:173: LCD_E=0; // Resting state of LCD's enable is zero
0116 C2A5       834            clr     _P2_5
0118            835   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:175: waitms(20);
0118 900014     836            mov     dptr,#0x0014
011B 120000     837            lcall   _waitms
011E            838   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:177: WriteCommand(0x33);
011E 758233     839            mov     dpl,#0x33
0121 120000     840            lcall   _WriteCommand
0124            841   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:178: WriteCommand(0x33);
0124 758233     842            mov     dpl,#0x33
0127 120000     843            lcall   _WriteCommand
012A            844   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:179: WriteCommand(0x32); // Change to 4-bit mode
012A 758232     845            mov     dpl,#0x32
012D 120000     846            lcall   _WriteCommand
0130            847   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:182: WriteCommand(0x28);
0130 758228     848            mov     dpl,#0x28
0133 120000     849            lcall   _WriteCommand
0136            850   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:183: WriteCommand(0x0c);
0136 75820C     851            mov     dpl,#0x0C
0139 120000     852            lcall   _WriteCommand
013C            853   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:184: WriteCommand(0x01); // Clear screen command (takes some time)
013C 758201     854            mov     dpl,#0x01
013F 120000     855            lcall   _WriteCommand
0142            856   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:185: waitms(20); // Wait for clear screen command to finsih.
0142 900014     857            mov     dptr,#0x0014
0145 020000     858            ljmp    _waitms
0148            859   ;------------------------------------------------------------
0148            860   ;Allocation info for local variables in function 'LCDprint'
0148            861   ;------------------------------------------------------------
0148            862   ;line                      Allocated with name '_LCDprint_PARM_2'
0148            863   ;string                    Allocated to registers r2 r3 r4 
0148            864   ;j                         Allocated to registers r5 r6 
0148            865   ;------------------------------------------------------------
0148            866   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:188: void LCDprint(char * string, unsigned char line, bit clear)
0148            867   ;        -----------------------------------------
0148            868   ;         function LCDprint
0148            869   ;        -----------------------------------------
0148            870   _LCDprint:
0148 AA82       871            mov     r2,dpl
014A AB83       872            mov     r3,dph
014C ACF0       873            mov     r4,b
014E            874   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:192: WriteCommand(line==2?0xc0:0x80);
014E 7402       875            mov     a,#0x02
0150 B52018     876            cjne    a,_LCDprint_PARM_2,L010013?
0153 7DC0       877            mov     r5,#0xC0
0155 8000       878            sjmp    L010014?
0157            879   L010013?:
0157 7D80       880            mov     r5,#0x80
0159            881   L010014?:
0159 8D82       882            mov     dpl,r5
015B C002       883            push    ar2
015D C003       884            push    ar3
015F C004       885            push    ar4
0161 120000     886            lcall   _WriteCommand
0164            887   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:193: waitms(5);
0164 900005     888            mov     dptr,#0x0005
0167 120000     889            lcall   _waitms
016A D004       890            pop     ar4
016C D003       891            pop     ar3
016E D002       892            pop     ar2
0170            893   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:194: for(j=0; string[j]!=0; j++)    WriteData(string[j]);// Write the message
0170 7D00       894            mov     r5,#0x00
0172 7E00       895            mov     r6,#0x00
0174            896   L010003?:
0174 ED         897            mov     a,r5
0175 2A         898            add     a,r2
0176 FF         899            mov     r7,a
0177 EE         900            mov     a,r6
0178 3B         901            addc    a,r3
0179 F8         902            mov     r0,a
017A 8C01       903            mov     ar1,r4
017C 8F82       904            mov     dpl,r7
017E 8883       905            mov     dph,r0
0180 89F0       906            mov     b,r1
0182 120000     907            lcall   __gptrget
0185 FF         908            mov     r7,a
0186 6000       909            jz      L010006?
0188 8F82       910            mov     dpl,r7
018A C002       911            push    ar2
018C C003       912            push    ar3
018E C004       913            push    ar4
0190 C005       914            push    ar5
0192 C006       915            push    ar6
0194 120000     916            lcall   _WriteData
0197 D006       917            pop     ar6
0199 D005       918            pop     ar5
019B D004       919            pop     ar4
019D D003       920            pop     ar3
019F D002       921            pop     ar2
01A1 0D         922            inc     r5
01A2 BD0098     923            cjne    r5,#0x00,L010003?
01A5 0E         924            inc     r6
01A6 8000       925            sjmp    L010003?
01A8            926   L010006?:
01A8            927   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:195: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01A8 309058     928            jnb     _LCDprint_PARM_3,L010011?
01AB 8D02       929            mov     ar2,r5
01AD 8E03       930            mov     ar3,r6
01AF            931   L010007?:
01AF C3         932            clr     c
01B0 EA         933            mov     a,r2
01B1 9410       934            subb    a,#0x10
01B3 EB         935            mov     a,r3
01B4 6480       936            xrl     a,#0x80
01B6 9480       937            subb    a,#0x80
01B8 5000       938            jnc     L010011?
01BA 758220     939            mov     dpl,#0x20
01BD C002       940            push    ar2
01BF C003       941            push    ar3
01C1 120000     942            lcall   _WriteData
01C4 D003       943            pop     ar3
01C6 D002       944            pop     ar2
01C8 0A         945            inc     r2
01C9 BA0098     946            cjne    r2,#0x00,L010007?
01CC 0B         947            inc     r3
01CD 8000       948            sjmp    L010007?
01CF            949   L010011?:
01CF 22         950            ret
01D0            951   ;------------------------------------------------------------
01D0            952   ;Allocation info for local variables in function 'getsn'
01D0            953   ;------------------------------------------------------------
01D0            954   ;len                       Allocated with name '_getsn_PARM_2'
01D0            955   ;buff                      Allocated with name '_getsn_buff_1_44'
01D0            956   ;j                         Allocated with name '_getsn_sloc0_1_0'
01D0            957   ;c                         Allocated to registers r3 
01D0            958   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
01D0            959   ;------------------------------------------------------------
01D0            960   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:198: int getsn (char * buff, int len)
01D0            961   ;        -----------------------------------------
01D0            962   ;         function getsn
01D0            963   ;        -----------------------------------------
01D0            964   _getsn:
01D0 858278     965            mov     _getsn_buff_1_44,dpl
01D3 858379     966            mov     (_getsn_buff_1_44 + 1),dph
01D6 85F07A     967            mov     (_getsn_buff_1_44 + 2),b
01D9            968   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:203: for(j=0; j<(len-1); j++)
01D9 E4         969            clr     a
01DA F5C8       970            mov     _getsn_sloc0_1_0,a
01DC F5C9       971            mov     (_getsn_sloc0_1_0 + 1),a
01DE E5D0       972            mov     a,_getsn_PARM_2
01E0 24FF       973            add     a,#0xff
01E2 FF         974            mov     r7,a
01E3 E5D1       975            mov     a,(_getsn_PARM_2 + 1)
01E5 34FF       976            addc    a,#0xff
01E7 F8         977            mov     r0,a
01E8 7900       978            mov     r1,#0x00
01EA 7A00       979            mov     r2,#0x00
01EC            980   L011005?:
01EC C3         981            clr     c
01ED E9         982            mov     a,r1
01EE 9F         983            subb    a,r7
01EF EA         984            mov     a,r2
01F0 6480       985            xrl     a,#0x80
01F2 88F0       986            mov     b,r0
01F4 63F080     987            xrl     b,#0x80
01F7 95F0       988            subb    a,b
01F9 5000       989            jnc     L011008?
01FB            990   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:205: c=getchar();
01FB C002       991            push    ar2
01FD C007       992            push    ar7
01FF C000       993            push    ar0
0201 C001       994            push    ar1
0203 120000     995            lcall   _getchar
0206 AB82       996            mov     r3,dpl
0208 D001       997            pop     ar1
020A D000       998            pop     ar0
020C D007       999            pop     ar7
020E D002      1000            pop     ar2
0210           1001   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:206: if ( (c=='\n') || (c=='\r') )
0210 BB0A98    1002            cjne    r3,#0x0A,L011015?
0213 8000      1003            sjmp    L011001?
0215           1004   L011015?:
0215 BB0D18    1005            cjne    r3,#0x0D,L011002?
0218           1006   L011001?:
0218           1007   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:208: buff[j]=0;
0218 E5C8      1008            mov     a,_getsn_sloc0_1_0
021A 2578      1009            add     a,_getsn_buff_1_44
021C FC        1010            mov     r4,a
021D E5C9      1011            mov     a,(_getsn_sloc0_1_0 + 1)
021F 3579      1012            addc    a,(_getsn_buff_1_44 + 1)
0221 FD        1013            mov     r5,a
0222 AE7A      1014            mov     r6,(_getsn_buff_1_44 + 2)
0224 8C82      1015            mov     dpl,r4
0226 8D83      1016            mov     dph,r5
0228 8EF0      1017            mov     b,r6
022A E4        1018            clr     a
022B 120000    1019            lcall   __gptrput
022E           1020   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:209: return j;
022E 85C882    1021            mov     dpl,_getsn_sloc0_1_0
0231 85C983    1022            mov     dph,(_getsn_sloc0_1_0 + 1)
0234 22        1023            ret
0235           1024   L011002?:
0235           1025   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:213: buff[j]=c;
0235 E9        1026            mov     a,r1
0236 2578      1027            add     a,_getsn_buff_1_44
0238 FC        1028            mov     r4,a
0239 EA        1029            mov     a,r2
023A 3579      1030            addc    a,(_getsn_buff_1_44 + 1)
023C FD        1031            mov     r5,a
023D AE7A      1032            mov     r6,(_getsn_buff_1_44 + 2)
023F 8C82      1033            mov     dpl,r4
0241 8D83      1034            mov     dph,r5
0243 8EF0      1035            mov     b,r6
0245 EB        1036            mov     a,r3
0246 120000    1037            lcall   __gptrput
0249           1038   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:203: for(j=0; j<(len-1); j++)
0249 09        1039            inc     r1
024A B90098    1040            cjne    r1,#0x00,L011018?
024D 0A        1041            inc     r2
024E           1042   L011018?:
024E 89C8      1043            mov     _getsn_sloc0_1_0,r1
0250 8AC9      1044            mov     (_getsn_sloc0_1_0 + 1),r2
0252 8000      1045            sjmp    L011005?
0254           1046   L011008?:
0254           1047   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:216: buff[j]=0;
0254 E5C8      1048            mov     a,_getsn_sloc0_1_0
0256 2578      1049            add     a,_getsn_buff_1_44
0258 FA        1050            mov     r2,a
0259 E5C9      1051            mov     a,(_getsn_sloc0_1_0 + 1)
025B 3579      1052            addc    a,(_getsn_buff_1_44 + 1)
025D FB        1053            mov     r3,a
025E AC7A      1054            mov     r4,(_getsn_buff_1_44 + 2)
0260 8A82      1055            mov     dpl,r2
0262 8B83      1056            mov     dph,r3
0264 8CF0      1057            mov     b,r4
0266 E4        1058            clr     a
0267 120000    1059            lcall   __gptrput
026A           1060   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:217: return len;
026A 85D082    1061            mov     dpl,_getsn_PARM_2
026D 85D183    1062            mov     dph,(_getsn_PARM_2 + 1)
0270 22        1063            ret
0271           1064   ;------------------------------------------------------------
0271           1065   ;Allocation info for local variables in function 'f2c'
0271           1066   ;------------------------------------------------------------
0271           1067   ;frequency                 Allocated to registers r2 r3 r4 r5 
0271           1068   ;------------------------------------------------------------
0271           1069   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:220: float f2c(float frequency)
0271           1070   ;        -----------------------------------------
0271           1071   ;         function f2c
0271           1072   ;        -----------------------------------------
0271           1073   _f2c:
0271 AA82      1074            mov     r2,dpl
0273 AB83      1075            mov     r3,dph
0275 ACF0      1076            mov     r4,b
0277 FD        1077            mov     r5,a
0278           1078   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:222: return (float)1/(0.6931*frequency*5000);
0278 C002      1079            push    ar2
027A C003      1080            push    ar3
027C C004      1081            push    ar4
027E C005      1082            push    ar5
0280 909800    1083            mov     dptr,#0x9800
0283 75F058    1084            mov     b,#0x58
0286 7445      1085            mov     a,#0x45
0288 120000    1086            lcall   ___fsmul
028B AA82      1087            mov     r2,dpl
028D AB83      1088            mov     r3,dph
028F ACF0      1089            mov     r4,b
0291 FD        1090            mov     r5,a
0292 E581      1091            mov     a,sp
0294 24FC      1092            add     a,#0xfc
0296 F581      1093            mov     sp,a
0298 C002      1094            push    ar2
029A C003      1095            push    ar3
029C C004      1096            push    ar4
029E C005      1097            push    ar5
02A0 900000    1098            mov     dptr,#0x0000
02A3 75F080    1099            mov     b,#0x80
02A6 743F      1100            mov     a,#0x3F
02A8 120000    1101            lcall   ___fsdiv
02AB AA82      1102            mov     r2,dpl
02AD AB83      1103            mov     r3,dph
02AF ACF0      1104            mov     r4,b
02B1 FD        1105            mov     r5,a
02B2 E581      1106            mov     a,sp
02B4 24FC      1107            add     a,#0xfc
02B6 F581      1108            mov     sp,a
02B8 8A82      1109            mov     dpl,r2
02BA 8B83      1110            mov     dph,r3
02BC 8CF0      1111            mov     b,r4
02BE ED        1112            mov     a,r5
02BF 22        1113            ret
02C0           1114   ;------------------------------------------------------------
02C0           1115   ;Allocation info for local variables in function 'TIMER0_Init'
02C0           1116   ;------------------------------------------------------------
02C0           1117   ;------------------------------------------------------------
02C0           1118   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:225: void TIMER0_Init(void)
02C0           1119   ;        -----------------------------------------
02C0           1120   ;         function TIMER0_Init
02C0           1121   ;        -----------------------------------------
02C0           1122   _TIMER0_Init:
02C0           1123   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:227: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
02C0 5389F0    1124            anl     _TMOD,#0xF0
02C3           1125   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:228: TMOD|=0b_0000_0101; // Timer/Counter 0 used as a 16-bit counter
02C3 438905    1126            orl     _TMOD,#0x05
02C6           1127   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:229: TR0=0; // Stop Timer/Counter 0
02C6 C28C      1128            clr     _TR0
02C8 22        1129            ret
02C9           1130   ;------------------------------------------------------------
02C9           1131   ;Allocation info for local variables in function 'main'
02C9           1132   ;------------------------------------------------------------
02C9           1133   ;output_buffer             Allocated with name '_main_output_buffer_1_54'
02C9           1134   ;period                    Allocated to registers r2 r3 r4 r5 
02C9           1135   ;F                         Allocated to registers 
02C9           1136   ;------------------------------------------------------------
02C9           1137   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:232: void main (void) 
02C9           1138   ;        -----------------------------------------
02C9           1139   ;         function main
02C9           1140   ;        -----------------------------------------
02C9           1141   _main:
02C9           1142   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:241: TIMER0_Init();
02C9 120000    1143            lcall   _TIMER0_Init
02CC           1144   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:243: waitms(500); // Give PuTTY a chance to start.
02CC 9001F4    1145            mov     dptr,#0x01F4
02CF 120000    1146            lcall   _waitms
02D2           1147   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:244: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
02D2 7498      1148            mov     a,#__str_0
02D4 C0E0      1149            push    acc
02D6 74B8      1150            mov     a,#(__str_0 >> 8)
02D8 C0E0      1151            push    acc
02DA 7480      1152            mov     a,#0x80
02DC C0E0      1153            push    acc
02DE 120000    1154            lcall   _printf
02E1 1581      1155            dec     sp
02E3 1581      1156            dec     sp
02E5 1581      1157            dec     sp
02E7           1158   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:249: __FILE__, __DATE__, __TIME__);
02E7           1159   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:248: "Compiled: %s, %s\n\n",
02E7 7418      1160            mov     a,#__str_4
02E9 C0E0      1161            push    acc
02EB 74B9      1162            mov     a,#(__str_4 >> 8)
02ED C0E0      1163            push    acc
02EF 7480      1164            mov     a,#0x80
02F1 C0E0      1165            push    acc
02F3 7458      1166            mov     a,#__str_3
02F5 C0E0      1167            push    acc
02F7 74B9      1168            mov     a,#(__str_3 >> 8)
02F9 C0E0      1169            push    acc
02FB 7480      1170            mov     a,#0x80
02FD C0E0      1171            push    acc
02FF 7498      1172            mov     a,#__str_2
0301 C0E0      1173            push    acc
0303 74B9      1174            mov     a,#(__str_2 >> 8)
0305 C0E0      1175            push    acc
0307 7480      1176            mov     a,#0x80
0309 C0E0      1177            push    acc
030B 74D8      1178            mov     a,#__str_1
030D C0E0      1179            push    acc
030F 74B9      1180            mov     a,#(__str_1 >> 8)
0311 C0E0      1181            push    acc
0313 7480      1182            mov     a,#0x80
0315 C0E0      1183            push    acc
0317 120000    1184            lcall   _printf
031A E581      1185            mov     a,sp
031C 24F4      1186            add     a,#0xf4
031E F581      1187            mov     sp,a
0320           1188   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:251: while (1)
0320           1189   L014018?:
0320           1190   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:254: TL0=0; 
0320 758A00    1191            mov     _TL0,#0x00
0323           1192   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:255: TH0=0;
0323 758C00    1193            mov     _TH0,#0x00
0326           1194   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:256: TF0=0;
0326 C28D      1195            clr     _TF0
0328           1196   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:257: overflow_count=0;
0328 756000    1197            mov     _overflow_count,#0x00
032B           1198   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:259: while(P0_1!=0); // Wait for the signal to be zero
032B           1199   L014001?:
032B 208158    1200            jb      _P0_1,L014001?
032E           1201   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:260: while(P0_1!=1); // Wait for the signal to be one
032E           1202   L014004?:
032E 308198    1203            jnb     _P0_1,L014004?
0331           1204   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:261: TR0=1; // Start the timer
0331 D28C      1205            setb    _TR0
0333           1206   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:262: while(P0_1!=0) // Wait for the signal to be zero
0333           1207   L014009?:
0333 308118    1208            jnb     _P0_1,L014014?
0336           1209   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:264: if(TF0==1) // Did the 16-bit timer overflow?
0336           1210   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:266: TF0=0;
0336 108D58    1211            jbc     _TF0,L014035?
0339 8000      1212            sjmp    L014009?
033B           1213   L014035?:
033B           1214   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:267: overflow_count++;
033B 0560      1215            inc     _overflow_count
033D           1216   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:270: while(P0_1!=1) // Wait for the signal to be one
033D 8000      1217            sjmp    L014009?
033F           1218   L014014?:
033F 208198    1219            jb      _P0_1,L014016?
0342           1220   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:272: if(TF0==1) // Did the 16-bit timer overflow?
0342           1221   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:274: TF0=0;
0342 108DD8    1222            jbc     _TF0,L014037?
0345 8000      1223            sjmp    L014014?
0347           1224   L014037?:
0347           1225   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:275: overflow_count++;
0347 0560      1226            inc     _overflow_count
0349 8000      1227            sjmp    L014014?
034B           1228   L014016?:
034B           1229   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:278: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
034B C28C      1230            clr     _TR0
034D           1231   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:279: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
034D 856082    1232            mov     dpl,_overflow_count
0350 120000    1233            lcall   ___uchar2fs
0353 AA82      1234            mov     r2,dpl
0355 AB83      1235            mov     r3,dph
0357 ACF0      1236            mov     r4,b
0359 FD        1237            mov     r5,a
035A C002      1238            push    ar2
035C C003      1239            push    ar3
035E C004      1240            push    ar4
0360 C005      1241            push    ar5
0362 900000    1242            mov     dptr,#0x0000
0365 75F080    1243            mov     b,#0x80
0368 7447      1244            mov     a,#0x47
036A 120000    1245            lcall   ___fsmul
036D AA82      1246            mov     r2,dpl
036F AB83      1247            mov     r3,dph
0371 ACF0      1248            mov     r4,b
0373 FD        1249            mov     r5,a
0374 E581      1250            mov     a,sp
0376 24FC      1251            add     a,#0xfc
0378 F581      1252            mov     sp,a
037A 858C82    1253            mov     dpl,_TH0
037D C002      1254            push    ar2
037F C003      1255            push    ar3
0381 C004      1256            push    ar4
0383 C005      1257            push    ar5
0385 120000    1258            lcall   ___uchar2fs
0388 AE82      1259            mov     r6,dpl
038A AF83      1260            mov     r7,dph
038C A8F0      1261            mov     r0,b
038E F9        1262            mov     r1,a
038F C006      1263            push    ar6
0391 C007      1264            push    ar7
0393 C000      1265            push    ar0
0395 C001      1266            push    ar1
0397 900000    1267            mov     dptr,#0x0000
039A 75F080    1268            mov     b,#0x80
039D 7443      1269            mov     a,#0x43
039F 120000    1270            lcall   ___fsmul
03A2 AE82      1271            mov     r6,dpl
03A4 AF83      1272            mov     r7,dph
03A6 A8F0      1273            mov     r0,b
03A8 F9        1274            mov     r1,a
03A9 E581      1275            mov     a,sp
03AB 24FC      1276            add     a,#0xfc
03AD F581      1277            mov     sp,a
03AF D005      1278            pop     ar5
03B1 D004      1279            pop     ar4
03B3 D003      1280            pop     ar3
03B5 D002      1281            pop     ar2
03B7 C006      1282            push    ar6
03B9 C007      1283            push    ar7
03BB C000      1284            push    ar0
03BD C001      1285            push    ar1
03BF 8A82      1286            mov     dpl,r2
03C1 8B83      1287            mov     dph,r3
03C3 8CF0      1288            mov     b,r4
03C5 ED        1289            mov     a,r5
03C6 120000    1290            lcall   ___fsadd
03C9 AA82      1291            mov     r2,dpl
03CB AB83      1292            mov     r3,dph
03CD ACF0      1293            mov     r4,b
03CF FD        1294            mov     r5,a
03D0 E581      1295            mov     a,sp
03D2 24FC      1296            add     a,#0xfc
03D4 F581      1297            mov     sp,a
03D6 AE8A      1298            mov     r6,_TL0
03D8 7F00      1299            mov     r7,#0x00
03DA 8E82      1300            mov     dpl,r6
03DC 8F83      1301            mov     dph,r7
03DE C002      1302            push    ar2
03E0 C003      1303            push    ar3
03E2 C004      1304            push    ar4
03E4 C005      1305            push    ar5
03E6 120000    1306            lcall   ___sint2fs
03E9 AE82      1307            mov     r6,dpl
03EB AF83      1308            mov     r7,dph
03ED A8F0      1309            mov     r0,b
03EF F9        1310            mov     r1,a
03F0 D005      1311            pop     ar5
03F2 D004      1312            pop     ar4
03F4 D003      1313            pop     ar3
03F6 D002      1314            pop     ar2
03F8 C006      1315            push    ar6
03FA C007      1316            push    ar7
03FC C000      1317            push    ar0
03FE C001      1318            push    ar1
0400 8A82      1319            mov     dpl,r2
0402 8B83      1320            mov     dph,r3
0404 8CF0      1321            mov     b,r4
0406 ED        1322            mov     a,r5
0407 120000    1323            lcall   ___fsadd
040A AA82      1324            mov     r2,dpl
040C AB83      1325            mov     r3,dph
040E ACF0      1326            mov     r4,b
0410 FD        1327            mov     r5,a
0411 E581      1328            mov     a,sp
0413 24FC      1329            add     a,#0xfc
0415 F581      1330            mov     sp,a
0417 C002      1331            push    ar2
0419 C003      1332            push    ar3
041B C004      1333            push    ar4
041D C005      1334            push    ar5
041F 90F4FC    1335            mov     dptr,#0xF4FC
0422 75F032    1336            mov     b,#0x32
0425 7434      1337            mov     a,#0x34
0427 120000    1338            lcall   ___fsmul
042A AA82      1339            mov     r2,dpl
042C AB83      1340            mov     r3,dph
042E ACF0      1341            mov     r4,b
0430 FD        1342            mov     r5,a
0431 E581      1343            mov     a,sp
0433 24FC      1344            add     a,#0xfc
0435 F581      1345            mov     sp,a
0437           1346   ;        C:\Users\kcgro\Documents\GitHub\ELEC291\LAB4\lab4.c:281: printf( "\rT=%f ms    ", period*1000.0);
0437 C002      1347            push    ar2
0439 C003      1348            push    ar3
043B C004      1349            push    ar4
043D C005      1350            push    ar5
043F 900000    1351            mov     dptr,#0x0000
0442 75F07A    1352            mov     b,#0x7A
0445 7444      1353            mov     a,#0x44
0447 120000    1354            lcall   ___fsmul
044A AA82      1355            mov     r2,dpl
044C AB83      1356            mov     r3,dph
044E ACF0      1357            mov     r4,b
0450 FD        1358            mov     r5,a
0451 E581      1359            mov     a,sp
0453 24FC      1360            add     a,#0xfc
0455 F581      1361            mov     sp,a
0457 C002      1362            push    ar2
0459 C003      1363            push    ar3
045B C004      1364            push    ar4
045D C005      1365            push    ar5
045F 74D8      1366            mov     a,#__str_5
0461 C0E0      1367            push    acc
0463 74BC      1368            mov     a,#(__str_5 >> 8)
0465 C0E0      1369            push    acc
0467 7480      1370            mov     a,#0x80
0469 C0E0      1371            push    acc
046B 120000    1372            lcall   _printf
046E E581      1373            mov     a,sp
0470 24F9      1374            add     a,#0xf9
0472 F581      1375            mov     sp,a
0474 020000    1376            ljmp    L014018?
0477           1377            rseg R_CSEG
0477           1378   
0000           1379            rseg R_XINIT
0000           1380   
0000           1381            rseg R_CONST
0000           1382   __str_0:
0000 1B        1383            db 0x1B
0001 5B324A    1384            db '[2J'
0004 00        1385            db 0x00
0005           1386   __str_1:
0005 45464D38  1387            db 'EFM8 Frequency measurement using Timer/Counter 0.'
     20467265
     7175656E
     6379206D
     65617375
     72656D65
     6E742075
     73696E67
     2054696D
     65722F43
     6F756E74
     65722030
     2E
0036 0A        1388            db 0x0A
0037 46696C65  1389            db 'File: %s'
     3A202573
003F 0A        1390            db 0x0A
0040 43        1391            db 'C'
0041 6F6D7069  1392            db 'ompiled: %s, %s'
     6C65643A
     2025732C
     202573
0050 0A        1393            db 0x0A
0051 0A        1394            db 0x0A
0052 00        1395            db 0x00
0053           1396   __str_2:
0053 433A      1397            db 'C:'
0055 5C        1398            db 0x5C
0056 55736572  1399            db 'Users'
     73
005B 5C        1400            db 0x5C
005C 6B636772  1401            db 'kcgro'
     6F
0061 5C        1402            db 0x5C
0062 446F6375  1403            db 'Documents'
     6D656E74
     73
006B 5C        1404            db 0x5C
006C 47697448  1405            db 'GitHub'
     7562
0072 5C        1406            db 0x5C
0073 454C4543  1407            db 'ELEC291'
     323931
007A 5C        1408            db 0x5C
007B 4C414234  1409            db 'LAB4'
007F 5C        1410            db 0x5C
0080 6C616234  1411            db 'lab4.c'
     2E63
0086 00        1412            db 0x00
0087           1413   __str_3:
0087 46656220  1414            db 'Feb 28 2023'
     32382032
     303233
0092 00        1415            db 0x00
0093           1416   __str_4:
0093 31333A31  1417            db '13:14:27'
     343A3237
009B 00        1418            db 0x00
009C           1419   __str_5:
009C 0D        1420            db 0x0D
009D 543D2566  1421            db 'T=%f ms    '
     206D7320
     202020
00A8 00        1422            db 0x00
00A9           1423   
0003           1424            CSEG
0003           1425   
0003           1426   end
